//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nox.Solution {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ValidationResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ValidationResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nox.Solution.ValidationResources", typeof(ValidationResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, endpoints, API server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string ApiServerProviderEmpty {
            get {
                return ResourceManager.GetString("ApiServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application event &apos;{0}&apos; has a duplicate name. Application event names must be unique in the solution..
        /// </summary>
        internal static string ApplicationEventNameDuplicate {
            get {
                return ResourceManager.GetString("ApplicationEventNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the events in the application definition does not have a name specified. All application events must have a unique name..
        /// </summary>
        internal static string ApplicationEventNameEmpty {
            get {
                return ResourceManager.GetString("ApplicationEventNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application event &apos;{0}&apos; is missing a type. Application events must all have a type specified..
        /// </summary>
        internal static string ApplicationEventTypeEmpty {
            get {
                return ResourceManager.GetString("ApplicationEventTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, endpoints, bff server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string BffServerProviderEmpty {
            get {
                return ResourceManager.GetString("BffServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, persistence, cache server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string CacheServerProviderEmpty {
            get {
                return ResourceManager.GetString("CacheServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection type options for {0} does not have a name specified..
        /// </summary>
        internal static string CollectionTypeOptionsNameEmpty {
            get {
                return ResourceManager.GetString("CollectionTypeOptionsNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Collection type options for {0} does not have a type specified..
        /// </summary>
        internal static string CollectionTypeOptionsTypeEmpty {
            get {
                return ResourceManager.GetString("CollectionTypeOptionsTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that does not have a corresponding relationship defined. A corresponding  relationship must also be defined on the target entity in the domain definition..
        /// </summary>
        internal static string CorrespondingRelationshipMissing {
            get {
                return ResourceManager.GetString("CorrespondingRelationshipMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, persistence, database server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string DatabaseServerProviderEmpty {
            get {
                return ResourceManager.GetString("DatabaseServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data connection &apos;{0}&apos; must have a valid Uri specified. Valid Uri schemes are one of file, http, https or blob.
        /// </summary>
        internal static string DataConnectionInvalidFileUri {
            get {
                return ResourceManager.GetString("DataConnectionInvalidFileUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data connection &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string DataConnectionProviderEmpty {
            get {
                return ResourceManager.GetString("DataConnectionProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain command &apos;{0}&apos; for entity &apos;{1}&apos; has a duplicate name. Domain command names must be unique in the solution..
        /// </summary>
        internal static string DomainCommandNameDuplicate {
            get {
                return ResourceManager.GetString("DomainCommandNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Domain command for entity &apos;{0}&apos; does not have a name specified. All domain commands must have a unique name..
        /// </summary>
        internal static string DomainCommandNameEmpty {
            get {
                return ResourceManager.GetString("DomainCommandNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain command &apos;{0}&apos; for entity &apos;{1}&apos; is missing a type. Domain commands must all have a type specified..
        /// </summary>
        internal static string DomainCommandTypeEmpty {
            get {
                return ResourceManager.GetString("DomainCommandTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No entities found in domain definition. a Nox domain must contain at least one entity..
        /// </summary>
        internal static string DomainEntitiesEmpty {
            get {
                return ResourceManager.GetString("DomainEntitiesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain event &apos;{0}&apos; for entity &apos;{1}&apos; has a duplicate name. Domain event names must be unique in the solution..
        /// </summary>
        internal static string DomainEventNameDuplicate {
            get {
                return ResourceManager.GetString("DomainEventNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the events for entity {0} in the domain definition does not have a name specified. All domain events must have a unique name..
        /// </summary>
        internal static string DomainEventNameEmpty {
            get {
                return ResourceManager.GetString("DomainEventNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain event &apos;{0}&apos; for entity &apos;{1}&apos; is missing a type. Domain events must all have a type specified..
        /// </summary>
        internal static string DomainEventTypeEmpty {
            get {
                return ResourceManager.GetString("DomainEventTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain query &apos;{0}&apos; for entity &apos;{1}&apos; has a duplicate name. Domain query names must be unique in the solution..
        /// </summary>
        internal static string DomainQueryNameDuplicate {
            get {
                return ResourceManager.GetString("DomainQueryNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Domain query for entity &apos;{0}&apos; is missing a name. All domain queries must have a unique name..
        /// </summary>
        internal static string DomainQueryNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Request Input for domain query &apos;{0}&apos; is missing a name. Domain query request inputs must all have a unique name..
        /// </summary>
        internal static string DomainQueryRequestNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryRequestNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Request Input for domain query &apos;{0}&apos; is missing a type. Domain query request inputs must all have a type specified..
        /// </summary>
        internal static string DomainQueryRequestTypeEmpty {
            get {
                return ResourceManager.GetString("DomainQueryRequestTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Response Output for domain query &apos;{0}&apos; is missing a name. Domain query response outputs must all have a unique name..
        /// </summary>
        internal static string DomainQueryResponseNameEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain query &apos;{0}&apos; for entity &apos;{1}&apos; is missing a Response Output. All domain queries must have a response output..
        /// </summary>
        internal static string DomainQueryResponseOutputEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseOutputEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Response Output for domain query &apos;{0}&apos; is missing a type. Domain query response outputs must all have a type specified..
        /// </summary>
        internal static string DomainQueryResponseTypeEmpty {
            get {
                return ResourceManager.GetString("DomainQueryResponseTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The dto &apos;{0}&apos; does not have any attributes defined. All dto&apos;s must have at least one attribute..
        /// </summary>
        internal static string DtoAttributesEmpty {
            get {
                return ResourceManager.GetString("DtoAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Data transfer object &apos;{0}&apos; has a duplicate name. All dtos must have a unique name in the solution..
        /// </summary>
        internal static string DtoNameDuplicate {
            get {
                return ResourceManager.GetString("DtoNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Dto in the application does not have a name specified. All dtos must have a unique name specified..
        /// </summary>
        internal static string DtoNameEmpty {
            get {
                return ResourceManager.GetString("DtoNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} &apos;{1}&apos; is duplicated. {0} must be unique in a domain definition..
        /// </summary>
        internal static string DuplicateItemInCollection {
            get {
                return ResourceManager.GetString("DuplicateItemInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, email server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string EmailServerProviderEmpty {
            get {
                return ResourceManager.GetString("EmailServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; does not have any attributes. a Nox entity must have at least one attribute..
        /// </summary>
        internal static string EntityAttributesEmpty {
            get {
                return ResourceManager.GetString("EntityAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; can&apos;t have localized text attributes because it has a compound key. Localized text attributes are only supported for entities with single keys..
        /// </summary>
        internal static string EntityCompoundKeyTextFieldsCantBeLocalized {
            get {
                return ResourceManager.GetString("EntityCompoundKeyTextFieldsCantBeLocalized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply defaults for entity &apos;{0}&apos;..
        /// </summary>
        internal static string EntityDefaultsFalse {
            get {
                return ResourceManager.GetString("EntityDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity {0}: Key property IsRequired should be set to True explicitly in  {1}.
        /// </summary>
        internal static string EntityKeyIsRequired {
            get {
                return ResourceManager.GetString("EntityKeyIsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity {0}: Key {1} cannot be Compound type..
        /// </summary>
        internal static string EntityKeyShouldNotBeCompoundType {
            get {
                return ResourceManager.GetString("EntityKeyShouldNotBeCompoundType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys are mandatory for entity {0}. Except owned entities with ZeroOrOne or ExactlyOne relationships..
        /// </summary>
        internal static string EntityKeysRequired {
            get {
                return ResourceManager.GetString("EntityKeysRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity name: {0} is duplicated. Entity names must be unique in a solution..
        /// </summary>
        internal static string EntityNameDuplicate {
            get {
                return ResourceManager.GetString("EntityNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Entity has been specified without a name. All Nox entities in a Nox domain must have a unique name..
        /// </summary>
        internal static string EntityNameEmpty {
            get {
                return ResourceManager.GetString("EntityNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned entity &apos;{0}&apos; cannot be auditable..
        /// </summary>
        internal static string EntityOwnedCannotBeAuditable {
            get {
                return ResourceManager.GetString("EntityOwnedCannotBeAuditable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned entity &apos;{0}&apos; cannot be referred by other entities relationships..
        /// </summary>
        internal static string EntityOwnedCannotBeRelatedToOtherEntities {
            get {
                return ResourceManager.GetString("EntityOwnedCannotBeRelatedToOtherEntities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned entity &apos;{0}&apos; cannot have relationships to other entities..
        /// </summary>
        internal static string EntityOwnedCannotHaveRelationships {
            get {
                return ResourceManager.GetString("EntityOwnedCannotHaveRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a description. All owned relationships must have a description..
        /// </summary>
        internal static string EntityOwnedRelationshipDescriptionEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipDescriptionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The onwed relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have an entity it refers to. All owned relationships must refer to an existing entity in the domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipEntityEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipEntityEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that does not exist in the domain definition. Owned relationships must refer to entities that exist in the domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipEntityMissing {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipEntityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that is used in other owned relationships. Owned entities must be owned by one parent only..
        /// </summary>
        internal static string EntityOwnedRelationshipEntityUsedMultipleTimes {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipEntityUsedMultipleTimes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; is duplicated. Owned relationships must be unique in a domain definition..
        /// </summary>
        internal static string EntityOwnedRelationshipNameDuplicate {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Owned relationship for entity &apos;{0}&apos; does not have a name. All owned relationships must have a unique name..
        /// </summary>
        internal static string EntityOwnedRelationshipNameEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The owned relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a relationship specified. All owned relationships must have a relationship ({2})..
        /// </summary>
        internal static string EntityOwnedRelationshipRelationshipEmpty {
            get {
                return ResourceManager.GetString("EntityOwnedRelationshipRelationshipEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity &apos;{0}&apos; can&apos;t have localized text attributes because it is owned entity. Localized text attributes are only supported for non-owned entities..
        /// </summary>
        internal static string EntityOwnedTextFieldsCantBeLocalized {
            get {
                return ResourceManager.GetString("EntityOwnedTextFieldsCantBeLocalized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply persistence defaults for entity &apos;{0}&apos;..
        /// </summary>
        internal static string EntityPersistenceDefaultsFalse {
            get {
                return ResourceManager.GetString("EntityPersistenceDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The table name for persistence of entity &apos;{0}&apos; is not specified. All Nox entities must persist to a table..
        /// </summary>
        internal static string EntityPersistenceTableNameEmpty {
            get {
                return ResourceManager.GetString("EntityPersistenceTableNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a description. All entity relationships must have a description..
        /// </summary>
        internal static string EntityRelationshipDescriptionEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipDescriptionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have an entity it refers to. All entity relationships must refer to an existing entity in the domain definition..
        /// </summary>
        internal static string EntityRelationshipEntityEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipEntityEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; refers to an entity &apos;{2}&apos; that does not exist in the domain definition. Entity relationships must refer to entities that exist in the domain definition..
        /// </summary>
        internal static string EntityRelationshipEntityMissing {
            get {
                return ResourceManager.GetString("EntityRelationshipEntityMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Entity relationship &apos;{0}&apos; is duplicated. Entity relationships must be unique in a domain definition..
        /// </summary>
        internal static string EntityRelationshipNameDuplicate {
            get {
                return ResourceManager.GetString("EntityRelationshipNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Entity relationship for entity &apos;{0}&apos; does not have a name. All entity relationships must have a unique name..
        /// </summary>
        internal static string EntityRelationshipNameEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Relationship &apos;{0}&apos; for entity &apos;{1}&apos; does not have a relationship specified. All entity relationships must have a relationship ({2})..
        /// </summary>
        internal static string EntityRelationshipRelationshipEmpty {
            get {
                return ResourceManager.GetString("EntityRelationshipRelationshipEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute name &apos;{0}&apos; in unique attribute constraint not found in neither entity attribute(s) ({1}) nor entity key(s) ({2}).
        /// </summary>
        internal static string EntityUniqueAttributeConstraintCanReferenceOnlyExistingAttributes {
            get {
                return ResourceManager.GetString("EntityUniqueAttributeConstraintCanReferenceOnlyExistingAttributes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship name &apos;{0}&apos; in unique attribute constraint not found in entity relationship(s) ({1}).
        /// </summary>
        internal static string EntityUniqueAttributeConstraintCanReferenceOnlyExistingRelationships {
            get {
                return ResourceManager.GetString("EntityUniqueAttributeConstraintCanReferenceOnlyExistingRelationships", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unique constraint {0} doesn&apos;t have any attribute names nor relationship names specified. It must have at least one attribute or relationship name referenced..
        /// </summary>
        internal static string EntityUniqueAttributeConstraintMustHaveAtLeastOneAttributeOrRelationship {
            get {
                return ResourceManager.GetString("EntityUniqueAttributeConstraintMustHaveAtLeastOneAttributeOrRelationship", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The environment name &apos;{0}&apos; is duplicated. Environment names must be unique in a solution..
        /// </summary>
        internal static string EnvironmentNameDuplicate {
            get {
                return ResourceManager.GetString("EnvironmentNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Environment is missing a name. a Name must be specified for each environment..
        /// </summary>
        internal static string EnvironmentNameEmpty {
            get {
                return ResourceManager.GetString("EnvironmentNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, persistence, event source server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string EventSourceServerProviderEmpty {
            get {
                return ResourceManager.GetString("EventSourceServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, im server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string ImServerProviderEmpty {
            get {
                return ResourceManager.GetString("ImServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply defaults for endpoints..
        /// </summary>
        internal static string InfrastructureEndPointsDefaultsFalse {
            get {
                return ResourceManager.GetString("InfrastructureEndPointsDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to AzureServiceBusConfig is required when the MessageBrokerProvider is  AzureServiceBus..
        /// </summary>
        internal static string IntegrationEventsServerAzureServiceBusConfigRequired {
            get {
                return ResourceManager.GetString("IntegrationEventsServerAzureServiceBusConfigRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply defaults for infrastructure, messaging, integrationEventServer..
        /// </summary>
        internal static string IntegrationEventsServerDefaultsFalse {
            get {
                return ResourceManager.GetString("IntegrationEventsServerDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a match section specified. All integration lookups must have a match..
        /// </summary>
        internal static string IntegrationLookupMatchEmpty {
            get {
                return ResourceManager.GetString("IntegrationLookupMatchEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a source column specified. All integration lookups must have a source column..
        /// </summary>
        internal static string IntegrationLookupSourceColumnEmpty {
            get {
                return ResourceManager.GetString("IntegrationLookupSourceColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a target attribute specified. All integration lookups must have a target attribute..
        /// </summary>
        internal static string IntegrationLookupTargetAttributeEmpty {
            get {
                return ResourceManager.GetString("IntegrationLookupTargetAttributeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Mapping for integration &apos;{0}&apos; does not have a source column specified. All integration mappings must have a source column..
        /// </summary>
        internal static string IntegrationMappingSourceColumnMissing {
            get {
                return ResourceManager.GetString("IntegrationMappingSourceColumnMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Mapping for integration &apos;{0}&apos; does not have a target attribute specified. All integration mappings must have a target attribute..
        /// </summary>
        internal static string IntegrationMappingTargetAttributeMissing {
            get {
                return ResourceManager.GetString("IntegrationMappingTargetAttributeMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a lookup column specified. All integration lookups must have a source column..
        /// </summary>
        internal static string IntegrationMatchLookupColumnEmpty {
            get {
                return ResourceManager.GetString("IntegrationMatchLookupColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a return column specified. All integration lookups must have a return column..
        /// </summary>
        internal static string IntegrationMatchReturnColumnEmpty {
            get {
                return ResourceManager.GetString("IntegrationMatchReturnColumnEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Lookup for integration &apos;{0}&apos; does not have a table specified. All integration lookups must have a table..
        /// </summary>
        internal static string IntegrationMatchTableEmpty {
            get {
                return ResourceManager.GetString("IntegrationMatchTableEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; has a duplicate name. Integration names must be unique in the solution..
        /// </summary>
        internal static string IntegrationNameDuplicate {
            get {
                return ResourceManager.GetString("IntegrationNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to an Integration in the application definition is missing a name. All integrations must have a unique name..
        /// </summary>
        internal static string IntegrationNameEmpty {
            get {
                return ResourceManager.GetString("IntegrationNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integration &apos;{1}&apos; does not have a start specified for its schedule. All scheduled integrations must have a start defined..
        /// </summary>
        internal static string IntegrationScheduleStartEmpty {
            get {
                return ResourceManager.GetString("IntegrationScheduleStartEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration {0} does not specify database options. When an integration sources data from a database, database options must be specified..
        /// </summary>
        internal static string IntegrationSourceDatabaseOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceDatabaseOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database options for the source of integration {0} has an invalid MinimumExpectedRecords setting. MinimumExpectedRecords must be equal to or greater than 1..
        /// </summary>
        internal static string IntegrationSourceDatabaseOptionsMinExptectedRecordsInvalid {
            get {
                return ResourceManager.GetString("IntegrationSourceDatabaseOptionsMinExptectedRecordsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The query in the database options of the source for integration {0} has not been specified. Database sources must have a query specified..
        /// </summary>
        internal static string IntegrationSourceDatabaseOptionsQueryEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceDatabaseOptionsQueryEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source &apos;{0}&apos; on integration &apos;{2}&apos; does not have a data connection specified. If the source type is not Entity, your integration source must have a data connection specified in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string IntegrationSourceDataConnectionEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceDataConnectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The data connection &apos;{1}&apos; in source &apos;{0}&apos; for integration &apos;{2}&apos; is not defined. All data connections must be defined in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string IntegrationSourceDataConnectionMissing {
            get {
                return ResourceManager.GetString("IntegrationSourceDataConnectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RecordAttributes for the source of integration &apos;{0}&apos; do not have any attributes defined. All File sources must have at least one attribute..
        /// </summary>
        internal static string IntegrationSourceFileAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceFileAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration {0} does not specify file options. When an integration sources data from a file, file options must be specified..
        /// </summary>
        internal static string IntegrationSourceFileOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceFileOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename in the file options of the source for integration {0} has not been specified. File sources must have a filename specified..
        /// </summary>
        internal static string IntegrationSourceFileOptionsFilenameEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceFileOptionsFilenameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file options for the source of integration {0} has an invalid MinimumExpectedRecords setting. MinimumExpectedRecords must be equal to or greater than 1..
        /// </summary>
        internal static string IntegrationSourceFileOptionsMinExptectedRecordsInvalid {
            get {
                return ResourceManager.GetString("IntegrationSourceFileOptionsMinExptectedRecordsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration {0} does not specify Http options. When an integration sources data from an http endpoint, http options must be specified..
        /// </summary>
        internal static string IntegrationSourceHttpOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceHttpOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The format in the http options of the source for integration {0} has not been specified. Http sources must have a format specified..
        /// </summary>
        internal static string IntegrationSourceHttpOptionsFormatEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceHttpOptionsFormatEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The route in the http options of the source for integration {0} has not been specified. Http sources must have a route specified..
        /// </summary>
        internal static string IntegrationSourceHttpOptionsRouteEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceHttpOptionsRouteEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The verb in the http options of the source for integration {0} has not been specified. Http sources must have a verb specified..
        /// </summary>
        internal static string IntegrationSourceHttpOptionsVerbEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceHttpOptionsVerbEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ResponseAttributes for the target of integration &apos;{0}&apos; do not have any attributes defined. All Http sources must have at least one request attribute..
        /// </summary>
        internal static string IntegrationSourceHttpResponseAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceHttpResponseAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MessageAttributes for the source of integration &apos;{0}&apos; do not have any attributes defined. All Message sources must have at least one attribute..
        /// </summary>
        internal static string IntegrationSourceMessageAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceMessageAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; does not have a source specified. All integrations must have a source and target specified..
        /// </summary>
        internal static string IntegrationSourceMissing {
            get {
                return ResourceManager.GetString("IntegrationSourceMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration {0} does not specify message queue options. When an integration sources data from a message queue, message queue options must be specified..
        /// </summary>
        internal static string IntegrationSourceMsgQueueOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceMsgQueueOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source in the message queue options of the source for integration {0} has not been specified. Message queue sources must have a source specified..
        /// </summary>
        internal static string IntegrationSourceMsgQueueOptionsSourceEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceMsgQueueOptionsSourceEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source for integration &apos;{0}&apos; does not have a name specified. All integration sources must have a name specified..
        /// </summary>
        internal static string IntegrationSourceNameEmpty {
            get {
                return ResourceManager.GetString("IntegrationSourceNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target for integration {0} does not specify database options. When an integration targets data to a database, database options must be specified..
        /// </summary>
        internal static string IntegrationTargetDatabaseOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetDatabaseOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stored procedure in the database options of the target for integration {0} has not been specified. Database targets must have a stored procedure specified..
        /// </summary>
        internal static string IntegrationTargetDatabaseOptionsStoredProcEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetDatabaseOptionsStoredProcEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; for integration &apos;{1}&apos; does not have a data connection specified. If the target type is not Entity, your integration target must have a data connection specified in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string IntegrationTargetDataConnectionEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetDataConnectionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; for integration &apos;{1}&apos; refers to a data connection &apos;{2}&apos; that is not defined. All data connections must be defined in the Infrastructure section of your yaml definition..
        /// </summary>
        internal static string IntegrationTargetDataConnectionMissing {
            get {
                return ResourceManager.GetString("IntegrationTargetDataConnectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RecordAttributes for the target of integration &apos;{0}&apos; do not have any attributes defined. All File Targets must have at least one attribute..
        /// </summary>
        internal static string IntegrationTargetFileAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetFileAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target for integration {0} does not specify file options. When an integration targets data to a file, file options must be specified..
        /// </summary>
        internal static string IntegrationTargetFileOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetFileOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The filename in the file options of the target for integration {0} has not been specified. File targets must have a filename specified..
        /// </summary>
        internal static string IntegrationTargetFileOptionsFilenameEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetFileOptionsFilenameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target for integration {0} does not specify Http options. When an integration targets data to an http endpoint, http options must be specified..
        /// </summary>
        internal static string IntegrationTargetHttpOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetHttpOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RequestAttributes for the target of integration &apos;{0}&apos; do not have any attributes defined. All Http Targets must have at least one request attribute..
        /// </summary>
        internal static string IntegrationTargetHttpRequestAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetHttpRequestAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The MessageAttributes for the target of integration &apos;{0}&apos; do not have any attributes defined. All Message Targets must have at least one attribute..
        /// </summary>
        internal static string IntegrationTargetMessageAttributesEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetMessageAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The integration &apos;{0}&apos; does not have a target specified. All integrations must have a source and target specified..
        /// </summary>
        internal static string IntegrationTargetMissing {
            get {
                return ResourceManager.GetString("IntegrationTargetMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target for integration {0} does not specify message queue options. When an integration targets data to a message queue, message queue options must be specified..
        /// </summary>
        internal static string IntegrationTargetMsgQueueOptionsEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetMsgQueueOptionsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target of integration &apos;{0}&apos; does not have a name specified. All integration targets must have a name..
        /// </summary>
        internal static string IntegrationTargetNameEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; of integration &apos;{1}&apos; does not have a valid target type specified. Valid target types are one of {2}..
        /// </summary>
        internal static string IntegrationTargetTypeEmpty {
            get {
                return ResourceManager.GetString("IntegrationTargetTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Integration TransformationType missing. an Integration Transformation Type must be specified for each integration..
        /// </summary>
        internal static string IntegrationTransformationTypeEmpty {
            get {
                return ResourceManager.GetString("IntegrationTransformationTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The member {0} of a class {1} cannot have the same name as the referenced entity..
        /// </summary>
        internal static string NameSameAsEnclosingType {
            get {
                return ResourceManager.GetString("NameSameAsEnclosingType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property with name {0} is missing in Entity {1}.
        /// </summary>
        internal static string NuidKeyMissingProperty {
            get {
                return ResourceManager.GetString("NuidKeyMissingProperty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The attributes for {0} are missing. {1} must have at least one attribute specified..
        /// </summary>
        internal static string ObjectTypeOptionsAttributesEmpty {
            get {
                return ResourceManager.GetString("ObjectTypeOptionsAttributesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relationship {0} doesn&apos;t satisfy condition that only zero / one to many relationships can be used in unique constraint..
        /// </summary>
        internal static string OnlySingleToManyRelationshipsCanBeUsedInUniqueConstraint {
            get {
                return ResourceManager.GetString("OnlySingleToManyRelationshipsCanBeUsedInUniqueConstraint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Owned entity {0} with ZeroOrOne or ExactlyOne relationship can not have key(s)..
        /// </summary>
        internal static string OwnedEntityKeysMustBeNull {
            get {
                return ResourceManager.GetString("OwnedEntityKeysMustBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The database server for infrastructure persistence has not been specified. a Nox solution must always have a database definition..
        /// </summary>
        internal static string PersistenceDatabaseServerEmpty {
            get {
                return ResourceManager.GetString("PersistenceDatabaseServerEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQLite does not support more than one AutoNumber per entity. Please remove the AutoNumber attribute from all but one attribute in entity &apos;{0}&apos;..
        /// </summary>
        internal static string PersistenceDatabaseSqliteAutoNumberLimitation {
            get {
                return ResourceManager.GetString("PersistenceDatabaseSqliteAutoNumberLimitation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Entity {0}. The dependant entity {1}  in relation {2} can only have a single key..
        /// </summary>
        internal static string RelationEntityDependentMustHaveSingleKey {
            get {
                return ResourceManager.GetString("RelationEntityDependentMustHaveSingleKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, persistence, search server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string SearchServerProviderEmpty {
            get {
                return ResourceManager.GetString("SearchServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, security, secrets, secrets server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string SecretsServerProviderEmpty {
            get {
                return ResourceManager.GetString("SecretsServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The secrets valid for in {0} must have a valid time span specified..
        /// </summary>
        internal static string SecretsValidForInvalidTimespan {
            get {
                return ResourceManager.GetString("SecretsValidForInvalidTimespan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name &apos;{0}&apos; of the server definition for &apos;{1}&apos; is duplicated elsewhere in the solution definition. Server names must be unique in a Nox solution definition..
        /// </summary>
        internal static string ServerNameDuplicate {
            get {
                return ResourceManager.GetString("ServerNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server definition for {0} is missing a name. All server definitions must have a unique name in a Nox solution..
        /// </summary>
        internal static string ServerNameEmpty {
            get {
                return ResourceManager.GetString("ServerNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server definition for {0} is missing a uri. All server definitions must have a hostname, IP address or URI specified in the ServerUri attribute..
        /// </summary>
        internal static string ServerUriEmpty {
            get {
                return ResourceManager.GetString("ServerUriEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server definition for {0} has an invalid configuration. Unable to build a proper uri from the available attributes..
        /// </summary>
        internal static string ServerUriInvalid {
            get {
                return ResourceManager.GetString("ServerUriInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The server definition for {0} has an invalid serverUri scheme, should be {1}. Unable to build a proper uri from the available attributes..
        /// </summary>
        internal static string ServerUriInvalidScheme {
            get {
                return ResourceManager.GetString("ServerUriInvalidScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is missing a name. All {1} must have a name specified..
        /// </summary>
        internal static string SimpleTypeNameEmpty {
            get {
                return ResourceManager.GetString("SimpleTypeNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is missing a type. All {1} must have a type specified..
        /// </summary>
        internal static string SimpleTypeTypeEmpty {
            get {
                return ResourceManager.GetString("SimpleTypeTypeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The infrastructure, dependencies, notifications, sms server &apos;{0}&apos; must have a valid provider specified. Valid providers are one of {1}.
        /// </summary>
        internal static string SmsServerProviderEmpty {
            get {
                return ResourceManager.GetString("SmsServerProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to apply defaults for the Solution root..
        /// </summary>
        internal static string SolutionDefaultsFalse {
            get {
                return ResourceManager.GetString("SolutionDefaultsFalse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution name missing. a Name must be specified for the solution..
        /// </summary>
        internal static string SolutionNameEmpty {
            get {
                return ResourceManager.GetString("SolutionNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Platform Id is missing. Platform Id must be specified for the solution..
        /// </summary>
        internal static string SolutionPlatformIdEmpty {
            get {
                return ResourceManager.GetString("SolutionPlatformIdEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution version is missing. Version must be specified for the solution..
        /// </summary>
        internal static string SolutionVersionEmpty {
            get {
                return ResourceManager.GetString("SolutionVersionEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution Version doesn&apos;t satisfy pattern..
        /// </summary>
        internal static string SolutionVersionPattern {
            get {
                return ResourceManager.GetString("SolutionVersionPattern", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Team Member &apos;{0}&apos; has no roles defined. Each member in the solution team must have at least one role..
        /// </summary>
        internal static string TeamRolesEmpty {
            get {
                return ResourceManager.GetString("TeamRolesEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The team member user name &apos;{0}&apos; is duplicated. Team user names must be unique in a solution..
        /// </summary>
        internal static string TeamUserNameDuplicate {
            get {
                return ResourceManager.GetString("TeamUserNameDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to a Team member is missing a username. a UserName must be specified for all team members..
        /// </summary>
        internal static string TeamUserNameEmpty {
            get {
                return ResourceManager.GetString("TeamUserNameEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Containers folder missing. a Containers folder must be specified under versionControl::folders..
        /// </summary>
        internal static string VersionControlContainersFolderEmpty {
            get {
                return ResourceManager.GetString("VersionControlContainersFolderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Control host missing. a Host must be specified for Version Control..
        /// </summary>
        internal static string VersionControlHostEmpty {
            get {
                return ResourceManager.GetString("VersionControlHostEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version Control provider missing. a Version Control Provider must be specified in a solution..
        /// </summary>
        internal static string VersionControlProviderEmpty {
            get {
                return ResourceManager.GetString("VersionControlProviderEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Source code folder missing. a Source Code folder must be specified under versionControl::folders..
        /// </summary>
        internal static string VersionControlSourceFolderEmpty {
            get {
                return ResourceManager.GetString("VersionControlSourceFolderEmpty", resourceCulture);
            }
        }
    }
}
