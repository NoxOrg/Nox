{{- func getSearchEnabled(entity)   
    ret true 
end -}}

@using Nox.Ui.Blazor.Lib.Components.Generic
@using Nox.Ui.Blazor.Lib.Services
@using Nox.Ui.Blazor.Lib.Resources
@using {{codeGenConventions.UiNameSpace}}.Forms.Add
@using {{codeGenConventions.UiNameSpace}}.Forms.Edit
@using {{codeGenConventions.UiNameSpace}}.DataGrid
@using {{codeGenConventions.UiNameSpace}}.Models
@using NoxResources = Nox.Ui.Blazor.Lib.Resources.Resources
@using {{codeGenConventions.UiNameSpace}}.Services

@namespace {{codeGenConventions.UiNameSpace}}.Pages

@page "/{{entity.PluralName}}"

@inject ApplicationState AppState
@{
    AppState.PageTitle = "{{entity.PluralName}}";
}

{{- if entity.Persistence.Delete.IsEnabled }}
@inject IDialogService DialogService
{{- end}}

@inject I{{entity.PluralName}}Service {{entity.PluralName}}Service

<MudText>{{entity.PluralName}}</MudText>

<MudGrid Spacing="0">
{{- if getSearchEnabled entity }}
    <MudItem xs="12">
        <MudText>Search section</MudText>
    </MudItem>
{{- end }}
{{- if entity.Persistence.Create.IsEnabled }}
    <MudItem xs="12" Style="margin:15px 0px 15px 0px;text-align:right;">
        <Actions OnClick="ShowAddDialog" Title="@NoxResources.Add.ToUpper()" StartIcon="@Icons.Material.Filled.Add" />
    </MudItem>
    <Add{{entity.Name}}Form @bind-IsVisible="showAddDialog" OnSubmit="Add{{entity.Name}}Submit" OnCancel="HideAddDialog" />
{{- end }}
{{- if entity.Persistence.Update.IsEnabled }}
    <Edit{{entity.Name}}Form @bind-IsVisible="showEditDialog" OnSubmit="Edit{{entity.Name}}Submit" OnCancel="HideEditDialog" {{entity.Name}}="SelectedEntity" />
{{- end }}
{{- if entity.Persistence.Read.IsEnabled }}
    <MudItem xs="12">
        <{{entity.PluralName}}DataGrid @ref="referencedDataGrid" OnSelectionChanged="@(e=>ShowEditDialog(e))" OnDeleteChanged="@(e=>ShowDeleteConfirmation(e))" />
    </MudItem>
{{- end }}
</MudGrid>

{{- if entity.Persistence.Delete.IsEnabled }}
<MudDialog @bind-IsVisible="showDeleteDialog" Options="ConfirmationDialogOptions">
        <TitleContent>
            <MudGrid>
                <MudItem Style="background-color:red;margin-top:5px;" xs="12">
                    <MudText Typo="Typo.h6" Style="color:white;">@string.Format(NoxResources.DeleteEntity, "{{entity.Name}}")</MudText>
                </MudItem>
            </MudGrid>
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudText Typo="Typo.h6">@string.Format(NoxResources.DeleteConfirmation, "{{entity.Name}}")</MudText>
                </MudItem>
            </MudGrid>
            @if (HasDeleteError) {
            <ErrorSummary />
            <MudText Color="Color.Error">ERROR</MudText>
        }
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@HideDeleteConfirmation"
                       Variant="Variant.Outlined"
                       Color="Color.Error"
                       Style="Margin:15px;">
                @NoxResources.Cancel.ToUpper()
            </MudButton>
            <MudButton OnClick="@Delete{{entity.Name}}Submit"
                       Variant="Variant.Filled"
                       Color="Color.Error"
                       Style="Margin:15px;"
                       Disabled="@IsDeleteLoading">
                <MudText>@NoxResources.Delete.ToUpper()</MudText>
                @if (IsDeleteLoading)
                {
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Small" />
                }
            </MudButton>
        </DialogActions>
    </MudDialog>
{{- end }}