using System.Collections.Immutable;

namespace Nox.Types;

/// <summary>
/// Represents a Nox <see cref="CountryNumber"/> type and value object. 
/// </summary>
public class CountryNumber : ValueObject<ushort, CountryNumber>
{
    public static readonly ImmutableHashSet<ushort> Values =
    [
        20,
        784,
        4,
        28,
        660,
        8,
        51,
        24,
        10,
        32,
        16,
        40,
        36,
        533,
        248,
        31,
        70,
        52,
        50,
        56,
        854,
        100,
        48,
        108,
        204,
        652,
        60,
        96,
        68,
        535,
        76,
        44,
        64,
        74,
        72,
        112,
        84,
        124,
        166,
        180,
        140,
        178,
        756,
        384,
        184,
        152,
        120,
        156,
        170,
        188,
        192,
        132,
        531,
        162,
        196,
        203,
        276,
        262,
        208,
        212,
        214,
        12,
        218,
        233,
        818,
        732,
        232,
        724,
        231,
        246,
        242,
        238,
        583,
        234,
        250,
        266,
        826,
        308,
        268,
        254,
        831,
        288,
        292,
        304,
        270,
        324,
        312,
        226,
        300,
        239,
        320,
        316,
        624,
        328,
        344,
        334,
        340,
        191,
        332,
        348,
        360,
        372,
        376,
        833,
        356,
        86,
        368,
        364,
        352,
        380,
        832,
        388,
        400,
        392,
        404,
        417,
        116,
        296,
        174,
        659,
        408,
        410,
        414,
        136,
        398,
        418,
        422,
        662,
        438,
        144,
        430,
        426,
        440,
        442,
        428,
        434,
        504,
        492,
        498,
        499,
        663,
        450,
        584,
        807,
        466,
        104,
        496,
        446,
        580,
        474,
        478,
        500,
        470,
        480,
        462,
        454,
        484,
        458,
        508,
        516,
        540,
        562,
        574,
        566,
        558,
        528,
        578,
        524,
        520,
        570,
        554,
        512,
        591,
        604,
        258,
        598,
        608,
        586,
        616,
        666,
        612,
        630,
        275,
        620,
        585,
        600,
        634,
        638,
        642,
        688,
        643,
        646,
        682,
        90,
        690,
        729,
        752,
        702,
        654,
        705,
        744,
        703,
        694,
        674,
        686,
        706,
        740,
        728,
        678,
        222,
        534,
        760,
        748,
        796,
        148,
        260,
        768,
        764,
        762,
        772,
        626,
        795,
        788,
        776,
        792,
        780,
        798,
        158,
        834,
        804,
        800,
        581,
        840,
        858,
        860,
        336,
        670,
        862,
        92,
        850,
        704,
        548,
        876,
        882,
        887,
        175,
        710,
        894,
        716,
    ];

    /// <summary>
    /// Validates a <see cref="CountryNumber"/> object.
    /// </summary>
    /// <returns>
    /// true if the <see cref="CountryNumber"/> value is valid.
    /// </returns>
    internal override ValidationResult Validate()
    {
        var result = base.Validate();

        if (!Values.Contains(Value))
        {
            result.Errors.Add(new ValidationFailure(nameof(Value), $"Could not create a Nox CountryNumber type as value {Value} is not allowed."));
        }

        return result;
    }

    /// <summary>
    /// <inheritdoc/>
    /// </summary>
    /// <returns></returns>
    public override string ToString() => $"{Value:D3}";
}
