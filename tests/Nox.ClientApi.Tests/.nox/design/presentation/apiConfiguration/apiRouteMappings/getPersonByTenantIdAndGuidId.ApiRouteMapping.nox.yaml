#
# getUsersByTenantIdAndGuidId.ApiRouteMapping.nox.yaml
#
# yaml-language-server: $schema=../../../../../../schemas/apiRouteMapping.json
#


# name: TenantUsers
# httpVerb: get
# route: /Tenants/{TenantId}/Users
# targetUrl: /Users?TenantId={TenantId}&{$RouteQuery}    

# requestInput:
#   - name: TenantId
#     description: Tenant Id
#     type: string
#     format: uuid  
    
name: PersonWithKey
httpVerb: get
route: /Tenants/{TenantId}/Persons/{key}
targetUrl: /Persons/{key}?TenantId={TenantId}       
requestInput:
  - name: TenantId
    description: Tenant Id
    type: string
    format: uuid
  - name: key
    description: User Id
    type: string
    format: uuid     

# name: UserContactSelection
# httpVerb: get
# route: /Tenants/{TenantId}/Users/{key}/UserContactSelection
# targetUrl: /Users/{key}/UserContactSelection?TenantId={TenantId}
# requestInput:
#   - name: TenantId
#     description: Tenant Id
#     type: string
#     format: uuid
#   - name: key
#     description: User Id
#     type: string
#     format: uuid

# name: UserGroups
# httpVerb: get
# route: /Tenants/{TenantId}/Users/{key}/Groups
# targetUrl: /Users/{key}/Groups?TenantId={TenantId} 
# requestInput:
#   - name: TenantId
#     description: Tenant Id
#     type: string
#     format: uuid
#   - name: key
#     description: User Id
#     type: string
#     format: uuid

# name: UserRoles
# httpVerb: get
# route: /Tenants/{TenantId}/Users/{key}/Applications/{ApplicationId}/Roles
# targetUrl: /Users/{key}/ApplicationRoles/$ref?TenantId={TenantId}&ApplicationId={ApplicationId}
# requestInput:
#   - name: TenantId
#     description: Tenant Id
#     type: string
#     format: uuid
#   - name: key
#     description: User Id
#     type: string
#     format: uuid
#   - name: ApplicationId
#     description: Application Id
#     type: string
#     format: uuid