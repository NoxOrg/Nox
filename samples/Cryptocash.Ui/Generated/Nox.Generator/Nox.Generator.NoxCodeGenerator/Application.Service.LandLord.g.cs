// Generated

using Cryptocash.Application.Dto;
using Cryptocash.Ui.Generated.Data.ApiSetting;
using Cryptocash.Ui.Generated.Data.Enum;

namespace Cryptocash.Ui.Generated.Data.Generic.Service;

/// <summary>
/// Bespoke Class generated by Nox.Generator used to define ApiUiService and Get Api results
/// </summary>
public class LandLordService : IEntityService
{
    /// <summary>
    /// Bespoke Class generated by Nox.Generator used to define ApiUiService which defines URL access and Search Filter, View, Order, Paging and Action settings
    /// </summary>
    public ApiUiService IntialiseApiUiService()
    {
        ApiUiService rtnApiUiService = new();

        rtnApiUiService.Url = "https://localhost:44310/api/LandLords";

        rtnApiUiService.OrderList = new List<SortOrder> {
            new SortOrder()
            {
                PropertyName = "Name",
                DefaultOrderDirection = SortOrderDirection.Ascending,
                CanSort = true
            }
        };

        rtnApiUiService.Paging = new Paging()
        {
            CurrentPage = 0,
            CurrentPageSize = 100,
            EntityTotal = 0
        };

        return rtnApiUiService;
    }

    public static LandLordCreateDto ConvertLandLordIntoCreateDto(LandLordDto currentDto)
    {
        if (currentDto != null)
        {
            LandLordCreateDto rtnDto = new LandLordCreateDto();
            rtnDto.Name = currentDto.Name;
            rtnDto.Address = currentDto.Address;
            rtnDto.ContractedAreasForVendingMachines = VendingMachineService.ConvertVendingMachineIntoCreateDtoList(currentDto.ContractedAreasForVendingMachines);

            return rtnDto;
        }

        return null;
    }

    public static List<LandLordCreateDto> ConvertLandLordIntoCreateDtoList(List<LandLordDto> currentDtoList)
    {
        if (currentDtoList != null)
        {
            List<LandLordCreateDto> rtnDto = new List<LandLordCreateDto>();

            foreach (LandLordDto currentDto in currentDtoList)
            {
                rtnDto.Add(ConvertLandLordIntoCreateDto(currentDto));
            }

            return rtnDto;
        }

        return null;
    }
}
