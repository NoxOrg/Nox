// Generated

using System.Collections.Generic;
using System;

using Cryptocash.Ui.Generated.Data.Generic;
using Cryptocash.Ui.Generated.Data.ApiSetting;
using Cryptocash.Ui.Generated.Data.Enum;

namespace Cryptocash.Ui.Generated.Data.Generic.VendingMachineService;

/// <summary>
/// Bespoke Class generated by Nox.Generator used to define ApiUiService and Get Api results
/// </summary>
public class VendingMachineService : IEntityService
{
    /// <summary>
    /// Bespoke Class generated by Nox.Generator used to define ApiUiService which defines URL access and Search Filter, View, Order, Paging and Action settings
    /// </summary>
    public ApiUiService IntialiseApiUiService()
    {
        ApiUiService rtnApiUiService = new();

        rtnApiUiService.Url = "https://localhost:44310/api/VendingMachines";

        rtnApiUiService.OrderList = new List<ApiOrder> {
            new ApiOrder()
            {
                PropertyName = "SerialNumber",
                DefaultOrderDirection = ApiOrderDirection.Descending,
                OrderType = ApiOrderType.Ordered
            },
            new ApiOrder()
            {
                PropertyName = "MacAddress",
                DefaultOrderDirection = ApiOrderDirection.None,
                OrderType = ApiOrderType.Ordered
            },
            new ApiOrder()
            {
                PropertyName = "PublicIp",
                DefaultOrderDirection = ApiOrderDirection.None,
                OrderType = ApiOrderType.Ordered
            },
            new ApiOrder()
            {
                PropertyName = "CreatedAtUtc",
                DefaultOrderDirection = ApiOrderDirection.None,
                OrderType = ApiOrderType.Off
            }
        };

        rtnApiUiService.SearchFilterList = new List<ApiSearchFilter> {
            new ApiSearchFilter()
            {
                PropertyName = "SerialNumber",
                SearchFilterType = ApiSearchFilterType.Eq,
                SearchFilterLocation = ApiSearchFilterLocation.MainSearch
            },
            new ApiSearchFilter()
            {
                PropertyName = "MacAddress",
                SearchFilterType = ApiSearchFilterType.Contains,
                SearchFilterLocation = ApiSearchFilterLocation.MainSearch
            },
            new ApiSearchFilter()
            {
                PropertyName = "PublicIp",
                SearchFilterType = ApiSearchFilterType.Contains,
                SearchFilterLocation = ApiSearchFilterLocation.MainSearch
            },
            new ApiSearchFilter()
            {
                PropertyName = "SerialNumber",
                SearchFilterType = ApiSearchFilterType.Eq,
                SearchFilterLocation = ApiSearchFilterLocation.FilterSearch,
            },
            new ApiSearchFilter()
            {
                PropertyName = "MacAddress",
                SearchFilterType = ApiSearchFilterType.Eq,
                SearchFilterLocation = ApiSearchFilterLocation.FilterSearch,
            },
            new ApiSearchFilter()
            {
                PropertyName = "PublicIp",
                SearchFilterType = ApiSearchFilterType.Eq,
                SearchFilterLocation = ApiSearchFilterLocation.FilterSearch,
            }
        };        

        rtnApiUiService.ViewList = new List<ApiView> {
            new ApiView() {
                PropertyName = "SerialNumber",
                DefaultView = ApiViewType.Displayed,
                ViewOptionList = new List<ApiViewType> {
                    ApiViewType.Hidden,
                    ApiViewType.Displayed
                }
            },
            new ApiView() {
                PropertyName = "MacAddress",
                DefaultView = ApiViewType.Displayed,
                ViewOptionList = new List<ApiViewType> {
                    ApiViewType.Hidden,
                    ApiViewType.Displayed
                }
            },
            new ApiView() {
                PropertyName = "PublicIp",
                DefaultView = ApiViewType.Displayed,
                ViewOptionList = new List<ApiViewType> {
                    ApiViewType.Hidden,
                    ApiViewType.Displayed
                }
            },
            new ApiView() {
                PropertyName = "CreatedAtUtc",
                DefaultView = ApiViewType.Displayed,
                ViewOptionList = new List<ApiViewType> {
                    ApiViewType.Hidden,
                    ApiViewType.Displayed
                }
            }
        };

        rtnApiUiService.Paging = new ApiPaging()
        {
            CurrentPage = 0,
            CurrentPageSize = 5,
            EntityTotal = 0,
            PageSizeList = new List<int> {
                3,
                5,
                10,
                20
            }
        };

        return rtnApiUiService;
    }
}
