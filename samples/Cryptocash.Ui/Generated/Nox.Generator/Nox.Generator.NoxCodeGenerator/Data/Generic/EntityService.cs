using System.Text.Json;
using System.Text.Json.Serialization;

namespace Cryptocash.Ui.Generated.Data.Generic
{

    /// <summary>
    /// Bespoke Class generated by Nox.Generator used to define ApiUiService and Get Api results
    /// </summary>
    public static class EntityDataService<T>
    {
        /// <summary>
        /// Method used to Get Api results
        /// </summary>
        /// <param name="ApiUiService"></param>
        /// <returns>Task<EntityData?></returns>
        public static async Task<EntityData<T>?> GetAsyncEntityData(ApiUiService? ApiUiService)
        {
            await Task.Delay(100); //deliberate for UI to avoid flicker

            var jsonOptions = new JsonSerializerOptions();
            jsonOptions.Converters.Add(new JsonStringEnumConverter());

            EntityData<T>? Entities = JsonSerializer.Deserialize<EntityData<T>>(await ApiDataService.ReadAsyncApi(ApiUiService), jsonOptions);

            return Entities;
        }

        /// <summary>
        /// Method to delete entity
        /// </summary>
        /// <param name="ApiUiService"></param>
        /// <returns>Task<string></returns>
        public static async Task DeleteAsyncEntityData(ApiUiService? ApiUiService)
        {
            await ApiDataService.DeleteAsyncApi(ApiUiService);
        }
    }
}