// Generated

using Cryptocash.Application.Dto;
using Cryptocash.Ui.Generated.Data.ApiSetting;
using Cryptocash.Ui.Generated.Data.Enum;

namespace Cryptocash.Ui.Generated.Data.Generic.Service;

/// <summary>
/// Bespoke Class generated by Nox.Generator used to define ApiUiService and Get Api results
/// </summary>
public class CountryService : IEntityService
{
    /// <summary>
    /// Bespoke Class generated by Nox.Generator used to define ApiUiService which defines URL access and Search Filter, View, Order, Paging and Action settings
    /// </summary>
    public ApiUiService IntialiseApiUiService()
    {
        ApiUiService rtnApiUiService = new();

        rtnApiUiService.Url = "https://localhost:44310/api/Countries";

        rtnApiUiService.OrderList = new List<SortOrder> {
            new SortOrder()
            {
                PropertyName = "Name",
                DefaultOrderDirection = SortOrderDirection.Ascending,
                CanSort = true
            }
        };

        rtnApiUiService.Paging = new Paging()
        {
            CurrentPage = 0,
            CurrentPageSize = 100,
            EntityTotal = 0
        };

        return rtnApiUiService;
    }

    public static CountryCreateDto ConvertCountryIntoCreateDto(CountryDto currentDto)
    {
        if (currentDto != null)
        {
            CountryCreateDto rtnDto = new CountryCreateDto();
            rtnDto.Id = currentDto.Id;
            rtnDto.Name = currentDto.Name;
            rtnDto.OfficialName = currentDto.OfficialName;
            rtnDto.CountryIsoNumeric = currentDto.CountryIsoNumeric;
            rtnDto.CountryIsoAlpha3 = currentDto.CountryIsoAlpha3;
            rtnDto.GeoCoords = currentDto.GeoCoords;
            rtnDto.FlagEmoji = currentDto.FlagEmoji;
            rtnDto.FlagSvg = currentDto.FlagSvg;
            rtnDto.FlagPng = currentDto.FlagPng;
            rtnDto.CoatOfArmsSvg = currentDto.CoatOfArmsSvg;
            rtnDto.CoatOfArmsPng = currentDto.CoatOfArmsPng;
            rtnDto.GoogleMapsUrl = currentDto.GoogleMapsUrl;
            rtnDto.OpenStreetMapsUrl = currentDto.OpenStreetMapsUrl;
            rtnDto.StartOfWeek = currentDto.StartOfWeek;
            rtnDto.CountryUsedByCurrencyId = currentDto.CountryUsedByCurrencyId;
            rtnDto.CountryUsedByCommissions = CommissionService.ConvertCommissionIntoCreateDtoList(currentDto.CountryUsedByCommissions);
            rtnDto.CountryUsedByVendingMachines = VendingMachineService.ConvertVendingMachineIntoCreateDtoList(currentDto.CountryUsedByVendingMachines);
            rtnDto.CountryUsedByCustomers = CustomerService.ConvertCustomerIntoCreateDtoList(currentDto.CountryUsedByCustomers);
            rtnDto.CountryOwnedTimeZones = CountryTimeZoneService.ConvertCountryTimeZoneIntoCreateDtoList(currentDto.CountryOwnedTimeZones);
            rtnDto.CountryOwnedHolidays = HolidayService.ConvertHolidayIntoCreateDtoList(currentDto.CountryOwnedHolidays);
            rtnDto.CountryUsedByCurrency = CurrencyService.ConvertCurrencyIntoCreateDto(currentDto.CountryUsedByCurrency);

            return rtnDto;
        }

        return null;
    }

    public static List<CountryCreateDto> ConvertCountryIntoCreateDtoList(List<CountryDto> currentDtoList)
    {
        if (currentDtoList != null)
        {
            List<CountryCreateDto> rtnDto = new List<CountryCreateDto>();

            foreach (CountryDto currentDto in currentDtoList)
            {
                rtnDto.Add(ConvertCountryIntoCreateDto(currentDto));
            }

            return rtnDto;
        }

        return null;
    }
}
