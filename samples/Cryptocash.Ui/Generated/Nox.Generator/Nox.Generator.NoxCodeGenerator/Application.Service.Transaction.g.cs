// Generated

using Cryptocash.Application.Dto;
using Cryptocash.Ui.Generated.Data.ApiSetting;
using Cryptocash.Ui.Generated.Data.Enum;

namespace Cryptocash.Ui.Generated.Data.Generic.Service;

/// <summary>
/// Bespoke Class generated by Nox.Generator used to define ApiUiService and Get Api results
/// </summary>
public class TransactionService : IEntityService
{
    /// <summary>
    /// Bespoke Class generated by Nox.Generator used to define ApiUiService which defines URL access and Search Filter, View, Order, Paging and Action settings
    /// </summary>
    public ApiUiService IntialiseApiUiService()
    {
        throw new NotImplementedException();
    }

    public static TransactionCreateDto ConvertTransactionIntoCreateDto(TransactionDto currentDto)
    {
        if (currentDto != null)
        {
            TransactionCreateDto rtnDto = new TransactionCreateDto();
            rtnDto.TransactionType = currentDto.TransactionType;
            rtnDto.ProcessedOnDateTime = currentDto.ProcessedOnDateTime;
            rtnDto.Amount = currentDto.Amount;
            rtnDto.Reference = currentDto.Reference;
            rtnDto.TransactionForCustomer = CustomerService.ConvertCustomerIntoCreateDto(currentDto.TransactionForCustomer);
            rtnDto.TransactionForBooking = BookingService.ConvertBookingIntoCreateDto(currentDto.TransactionForBooking);

            return rtnDto;
        }

        return null;
    }

    public static List<TransactionCreateDto> ConvertTransactionIntoCreateDtoList(List<TransactionDto> currentDtoList)
    {
        if (currentDtoList != null)
        {
            List<TransactionCreateDto> rtnDto = new List<TransactionCreateDto>();

            foreach (TransactionDto currentDto in currentDtoList)
            {
                rtnDto.Add(ConvertTransactionIntoCreateDto(currentDto));
            }

            return rtnDto;
        }

        return null;
    }
}
