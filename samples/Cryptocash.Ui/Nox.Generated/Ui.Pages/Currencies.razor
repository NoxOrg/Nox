@using Nox.Ui.Blazor.Lib.Components.Generic
@using Nox.Ui.Blazor.Lib.Services
@using Nox.Ui.Blazor.Lib.Resources
@using Cryptocash.Ui.Forms.Add
@using Cryptocash.Ui.Forms.Edit
@using Cryptocash.Ui.DataGrid
@using Cryptocash.Ui.Models
@using Cryptocash.Ui.Helper
@using Cryptocash.Ui.Enum
@using Cryptocash.Ui.Data
@using NoxResources = Nox.Ui.Blazor.Lib.Resources.Resources
@using Cryptocash.Ui.Services

@namespace Cryptocash.Ui.Pages

@page "/Currencies"

@inject ApplicationState AppState
@{
    AppState.PageTitle = "Currencies";
}
@inject IDialogService DialogService

@inject ICurrenciesService CurrenciesService

<MudText>Currencies</MudText>

<MudGrid Spacing="0">
    <MudItem xs="12">
        <MudGrid Spacing="2" Style="margin-top:10px;">
                <MudItem xs="6">
                    <MudTextField @bind-Value="@SearchMainValue"
                                  Label="Search"
                                  Variant="Variant.Outlined"
                                  FullWidth="true"
                                  Clearable="true"
                                  OnClearButtonClick="@(() => ClearMainSearchFilterList())"
                                  OnKeyUp="@(e=>SearchEnterSubmit(e))"
                                  Placeholder="@CurrentApiUiService!.SearchLabel"></MudTextField>
                </MudItem>
                <MudItem xs="3" Class="align-left justify-left" Style="margin-top:15px;">
                    <table>
                        <tr>
                            <td style="padding-left:10px;">
                                <MudButton OnClick="Search"
                                           Variant="Variant.Filled"
                                           StartIcon="@Icons.Material.Filled.Search"
                                           Color="Color.Info">Search</MudButton>
                            </td>

                            <td style="padding-left:20px;">
                                <MudButton OnClick="@(() => OpenSearchFilterDrawer(true))"
                                           Variant="Variant.Text"
                                           StartIcon="@Icons.Material.Filled.FilterAlt"
                                           Color="Color.Info">Filters</MudButton>
                            </td>

                             <td style="padding-left:20px;">
                                <MudButton OnClick="@(() => OpenViewDrawer(true))"
                                           Variant="Variant.Text"
                                           StartIcon="@Icons.Material.Filled.DisplaySettings"
                                           Color="Color.Info">View</MudButton>
                            </td>                           
                        </tr>
                    </table>
                </MudItem>
            </MudGrid>
    </MudItem>
    <MudItem xs="12" Style="margin:15px 0px 15px 0px;text-align:right;">
        <Actions OnClick="ShowAddDialog" Title="@NoxResources.Add.ToUpper()" StartIcon="@Icons.Material.Filled.Add" />
    </MudItem>
    <AddCurrencyForm @bind-IsVisible="showAddDialog" OnSubmit="AddCurrencySubmit" OnCancel="HideAddDialog" />
    <EditCurrencyForm @bind-IsVisible="showEditDialog" OnSubmit="EditCurrencySubmit" OnCancel="HideEditDialog" Currency="SelectedEntity" />
    <MudItem xs="12">
        <CurrenciesDataGrid @ref="referencedDataGrid" bind-CurrentApiUiService="@CurrentApiUiService" OnSelectionChanged="@(e=>ShowEditDialog(e))" OnDeleteChanged="@(e=>ShowDeleteConfirmation(e))" />
    </MudItem>
</MudGrid>
<MudDialog @bind-IsVisible="showDeleteDialog" Options="ConfirmationDialogOptions">
        <TitleContent>
            <MudGrid>
                <MudItem Style="background-color:red;margin-top:5px;" xs="12">
                    <MudText Typo="Typo.h6" Style="color:white;">@string.Format(NoxResources.DeleteEntity, "Currency")</MudText>
                </MudItem>
            </MudGrid>
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudText Typo="Typo.h6">@string.Format(NoxResources.DeleteConfirmation, "Currency")</MudText>
                </MudItem>
            </MudGrid>
            @if (HasDeleteError) {
            <ErrorSummary />
            <MudText Color="Color.Error">ERROR</MudText>
        }
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="@HideDeleteConfirmation"
                       Variant="Variant.Outlined"
                       Color="Color.Error"
                       Style="Margin:15px;">
                @NoxResources.Cancel.ToUpper()
            </MudButton>
            <MudButton OnClick="@DeleteCurrencySubmit"
                       Variant="Variant.Filled"
                       Color="Color.Error"
                       Style="Margin:15px;"
                       Disabled="@IsDeleteLoading">
                <MudText>@NoxResources.Delete.ToUpper()</MudText>
                @if (IsDeleteLoading)
                {
                    <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Small" />
                }
            </MudButton>
        </DialogActions>
    </MudDialog>

    @if (IsOpenSearchFilterDrawer)
    {
        <MudDrawer @bind-Open="IsOpenSearchFilterDrawer"
                   Width="400px"
                   Height="100%"
                   Anchor="Anchor.End"
                   Elevation="1"
                   Variant="@DrawerVariant.Temporary">
            <MudDrawerHeader>
                <table style="width:100%">
                    <tr>
                        <td style="text-align:left">
                            <MudText Typo="Typo.h6">@NoxResources.Filters</MudText>
                        </td>
                        <td style="text-align:right">
                            <MudIconButton Icon="@Icons.Material.Filled.Close"
                                           Color="Color.Info"
                                           OnClick="@(() => OpenSearchFilterDrawer(false))"></MudIconButton>
                        </td>
                    </tr>
                </table>
            </MudDrawerHeader>
            <MudNavMenu>
                @if (IsSearchFilterPopulated)
                {
                    <table style="width:100%;">
                        @foreach (SearchFilter CurrentFilter in CurrentApiUiService!.SearchFilterList!.Where(searchFilter => searchFilter.SearchFilterLocation == SearchFilterLocation.FilterSearch))
                        {
                            string LabelName = UtilityHelper.UppercaseFirstCharacter(CurrentFilter.PropertyName);

                            if (CurrentFilter.IsDropdownSelection)
                            {
                                <tr>
                                    <td style="padding:15px 25px 0px 25px;">
                                        @if (CurrentFilter.SearchValueOptionList != null)
                                        {
                                            <MudSelect Dense="true"
                                                       T="string"
                                                       Label="@LabelName"
                                                       Variant="Variant.Outlined"
                                                       Placeholder="@NoxResources.PleaseSelect"
                                                       ValueChanged="@(e=>CurrentApiUiService!.UpdateSearchFilter(e,CurrentFilter))"
                                                       Clearable="true"
                                                       OnClearButtonClick="@(e=>ClearSearchFilter(e,CurrentFilter))"
                                                       SelectedValues="CurrentApiUiService!.GetSearchFilterValueList(CurrentFilter)">
                                                @foreach (var CurrentOption in CurrentFilter.SearchValueOptionList)
                                                {
                                                    <MudSelectItem Value="@(CurrentOption.Value)" />
                                                }
                                            </MudSelect>
                                        }
                                    </td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td style="padding:15px 25px 0px 25px;">
                                        <MudTextField Label="@LabelName"
                                                      Variant="Variant.Outlined"
                                                      FullWidth="true"
                                                      TextChanged="@(e=>CurrentApiUiService!.UpdateSearchFilter(e,CurrentFilter))"
                                                      OnClearButtonClick="@(e=>ClearSearchFilter(e,CurrentFilter))"
                                                      T="string"
                                                      Clearable="true"
                                                      Value="CurrentApiUiService!.GetSearchFilterValue(CurrentFilter)"></MudTextField>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                    <table style="width:100%;margin-top:20px;">
                        <tr>
                            <td style="text-align:left;padding:25px;width:50%;">
                                <MudButton OnClick="@(() => CurrentApiUiService!.ResetFilterSearchFilterList())"
                                           Variant="Variant.Outlined"
                                           Color="Color.Info"
                                           FullWidth="true">@NoxResources.ClearAll</MudButton>
                            </td>
                            <td style="text-align:right;padding:25px;width:50%;">
                                <MudButton OnClick="ApplySearchFilterList"
                                           Variant="Variant.Filled"
                                           Color="Color.Info"
                                           FullWidth="true">@NoxResources.Apply</MudButton>
                            </td>
                        </tr>
                    </table>
                }
            </MudNavMenu>
        </MudDrawer>
    }

    @if (IsOpenViewDrawer)
    {
        <MudDrawer @bind-Open="IsOpenViewDrawer"
                   Width="400px"
                   Height="100%"
                   Anchor="Anchor.End"
                   Elevation="1"
                   Variant="@DrawerVariant.Temporary">
            <MudDrawerHeader>
                <table style="width:100%">
                    <tr>
                        <td style="text-align:left;">
                            <MudText Typo="Typo.h6">@NoxResources.ViewColumns</MudText>
                        </td>
                        <td style="text-align:right">
                            <MudIconButton Icon="@Icons.Material.Filled.Close"
                                           Color="Color.Info"
                                           OnClick="@(() => OpenViewDrawer(false))"></MudIconButton>
                        </td>
                    </tr>
                </table>
            </MudDrawerHeader>
            <MudNavMenu>
                @if (IsViewPopulated)
                {
                    @foreach (ShowInSearchResultsOption CurrentFilter in CurrentApiUiService!.ViewList!)
                    {
                        string labelName = UtilityHelper.UppercaseFirstCharacter(CurrentFilter.PropertyName);
                        bool IsChecked = (CurrentFilter.SetShowInSearchResultsOption.Equals(ShowInSearchResultsType.OptionalAndOnByDefault)
                        || CurrentFilter.SetShowInSearchResultsOption.Equals(ShowInSearchResultsType.Always));
                        <MudSwitch Label="@labelName"
                                   Color="Color.Info"
                                   Value="IsChecked"
                                   ValueChanged="@(e=>CurrentApiUiService!.UpdateShowInSearch(e,CurrentFilter))"
                                   T="bool"
                                   Style="padding:15px 0px 0px 25px;"
                                   Disabled="CurrentFilter.IsSetViewDisabled" />
                    }
                    <table style="width:100%;margin-top:20px;">
                        <tr>
                            <td style="text-align:left;padding:25px;width:50%;">
                                <MudButton OnClick="ResetViewList"
                                           Variant="Variant.Outlined"
                                           Color="Color.Info"
                                           FullWidth="true">@NoxResources.DefaultView</MudButton>
                            </td>
                            <td style="text-align:right;padding:25px;width:50%;">
                                <MudButton OnClick="ApplyViewList"
                                           Variant="Variant.Filled"
                                           Color="Color.Info"
                                           FullWidth="true">@NoxResources.Apply</MudButton>
                            </td>
                        </tr>
                    </table>
                }
            </MudNavMenu>
        </MudDrawer>
    }