@using NoxResources = Nox.Ui.Blazor.Lib.Resources.Resources
@using Nox.Ui.Blazor.Lib.Components.Generic
@using Cryptocash.Ui.Services
@using Cryptocash.Application.Dto
@using Nox.Ui.Blazor.Lib.Components.NoxTypes


@namespace Cryptocash.Ui.Forms.Add

@inject ICountriesService CountriesService

<MudDialog @bind-IsVisible="@IsVisible" Options="@AddDialogOptions">
    <TitleContent>
        <MudText Typo="Typo.h6">@string.Format(NoxResources.AddEntity, "Country")</MudText>
    </TitleContent>
    <DialogContent>
        <MudForm Model="@Country">
            <MudGrid>
                <MudItem xs="12">
                        <EditText @bind-Text="@Country.Name" Title="Name" TypeOptions="@CountryMetadata.NameTypeOptions" />
                </MudItem>
            </MudGrid>            
        </MudForm>
        @if (HasError) {
            <ErrorSummary />
            <MudText Color="Color.Error">ERROR</MudText>
        }
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="@OnCancelClicked"
                   Variant="Variant.Outlined"
                   Color="Color.Info"
                   Style="Margin:15px;">
            @NoxResources.Cancel.ToUpper()
        </MudButton>
        <MudButton OnClick="@OnSubmitClicked"
                   Variant="Variant.Filled"
                   Color="Color.Info"
                   Style="Margin:15px;"
                   Disabled="@IsLoading">
            <MudText>@NoxResources.Submit.ToUpper()</MudText>
             @if (IsLoading)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" Size="Size.Small" />
            }
        </MudButton>
    </DialogActions>
</MudDialog>