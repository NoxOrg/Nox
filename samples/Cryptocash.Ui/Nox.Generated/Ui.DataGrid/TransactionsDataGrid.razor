@using NoxResources = Nox.Ui.Blazor.Lib.Resources.Resources
@using Nox.Ui.Blazor.Lib.Components.NoxTypes

@using Cryptocash.Ui.Services
@using Cryptocash.Ui.Models

@namespace Cryptocash.Ui.DataGrid

@inject ITransactionsService TransactionsService

<MudTable ServerData="@(new Func<TableState, System.Threading.CancellationToken, Task<TableData<TransactionModel>>>(ServerReload))"
          @ref="TransactionDataGridTable"
          CurrentPage="Convert.ToInt32(CurrentApiUiService!.Paging?.CurrentPage)"
          RowsPerPage="Convert.ToInt32(CurrentApiUiService!.Paging?.CurrentPageSize)"
          T="TransactionModel" 
          Items="@TransactionsData" 
          Loading="@IsLoading"
          Hover="true"                                  
          Breakpoint="Breakpoint.Sm"
          Elevation="0"
          Style="border-style:solid;border-width:2px;border-color:lightgray;"
          Dense="true">
    <HeaderContent>
        <MudTh>Select</MudTh>
        @if (CurrentApiUiService!.IsPropertyShowInSearch("TransactionType"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("TransactionType"))
            {
                <MudTh>
                    <MudTableSortLabel T="TransactionModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "TransactionType"))"
                                        InitialDirection="@GetPropertyMudSortDirection("TransactionType")">
                        Transaction Type
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Transaction Type</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("ProcessedOnDateTime"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("ProcessedOnDateTime"))
            {
                <MudTh>
                    <MudTableSortLabel T="TransactionModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "ProcessedOnDateTime"))"
                                        InitialDirection="@GetPropertyMudSortDirection("ProcessedOnDateTime")">
                        Processed On
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Processed On</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Amount"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("Amount"))
            {
                <MudTh>
                    <MudTableSortLabel T="TransactionModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "Amount"))"
                                        InitialDirection="@GetPropertyMudSortDirection("Amount")">
                        Amount
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Amount</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Reference"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("Reference"))
            {
                <MudTh>
                    <MudTableSortLabel T="TransactionModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "Reference"))"
                                        InitialDirection="@GetPropertyMudSortDirection("Reference")">
                        Reference
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Reference</MudTh>
            }
        }
        <MudTh>Delete</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
             <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Info" OnClick="@(e=>SelectedOnClick(context))" />
        </MudTd>
        @if (CurrentApiUiService!.IsPropertyShowInSearch("TransactionType"))
        {
            <MudTd>
                <ViewText Text="@context.TransactionType" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("ProcessedOnDateTime"))
        {
            <MudTd>
                <ViewDateTime DateTime="@context.ProcessedOnDateTime" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Amount"))
        {
            <MudTd>
                <ViewMoney Money="@context.Amount" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Reference"))
        {
            <MudTd>
                <ViewText Text="@context.Reference" />
            </MudTd>
        }
        <MudTd>
             <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(e=>DeleteOnClick(context))" />
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText Typo="Typo.h6">@NoxResources.NoResultsFound</MudText>
    </NoRecordsContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="CurrentApiUiService!.Paging?.PageSizeList?.ToArray()" />
    </PagerContent>
</MudTable>