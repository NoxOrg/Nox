@using NoxResources = Nox.Ui.Blazor.Lib.Resources.Resources
@using Nox.Ui.Blazor.Lib.Components.NoxTypes

@using Cryptocash.Ui.Services
@using Cryptocash.Ui.Models

@namespace Cryptocash.Ui.DataGrid

@inject ICurrenciesService CurrenciesService

<MudTable ServerData="@(new Func<TableState, System.Threading.CancellationToken, Task<TableData<CurrencyModel>>>(ServerReload))"
          @ref="CurrencyDataGridTable"
          CurrentPage="Convert.ToInt32(CurrentApiUiService!.Paging?.CurrentPage)"
          RowsPerPage="Convert.ToInt32(CurrentApiUiService!.Paging?.CurrentPageSize)"
          T="CurrencyModel" 
          Items="@CurrenciesData" 
          Loading="@IsLoading"
          Hover="true"                                  
          Breakpoint="Breakpoint.Sm"
          Elevation="0"
          Style="border-style:solid;border-width:2px;border-color:lightgray;"
          Dense="true">
    <HeaderContent>
        <MudTh>Select</MudTh>
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Name"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("Name"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "Name"))"
                                        InitialDirection="@GetPropertyMudSortDirection("Name")">
                        Currency Name
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Currency Name</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("CurrencyIsoNumeric"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("CurrencyIsoNumeric"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "CurrencyIsoNumeric"))"
                                        InitialDirection="@GetPropertyMudSortDirection("CurrencyIsoNumeric")">
                        Currency Id
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Currency Id</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Symbol"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("Symbol"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "Symbol"))"
                                        InitialDirection="@GetPropertyMudSortDirection("Symbol")">
                        Currency Symbol
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Currency Symbol</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("ThousandsSeparator"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("ThousandsSeparator"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "ThousandsSeparator"))"
                                        InitialDirection="@GetPropertyMudSortDirection("ThousandsSeparator")">
                        Thousands Separator
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Thousands Separator</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("DecimalSeparator"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("DecimalSeparator"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "DecimalSeparator"))"
                                        InitialDirection="@GetPropertyMudSortDirection("DecimalSeparator")">
                        Decimal Separator
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Decimal Separator</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("SpaceBetweenAmountAndSymbol"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("SpaceBetweenAmountAndSymbol"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "SpaceBetweenAmountAndSymbol"))"
                                        InitialDirection="@GetPropertyMudSortDirection("SpaceBetweenAmountAndSymbol")">
                        Space Between
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Space Between</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("SymbolOnLeft"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("SymbolOnLeft"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "SymbolOnLeft"))"
                                        InitialDirection="@GetPropertyMudSortDirection("SymbolOnLeft")">
                        Symbol On Left
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Symbol On Left</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("DecimalDigits"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("DecimalDigits"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "DecimalDigits"))"
                                        InitialDirection="@GetPropertyMudSortDirection("DecimalDigits")">
                        Decimal Digits
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Decimal Digits</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MajorName"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("MajorName"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "MajorName"))"
                                        InitialDirection="@GetPropertyMudSortDirection("MajorName")">
                        Major Name
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Major Name</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MajorSymbol"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("MajorSymbol"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "MajorSymbol"))"
                                        InitialDirection="@GetPropertyMudSortDirection("MajorSymbol")">
                        Major Symbol
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Major Symbol</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorName"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("MinorName"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "MinorName"))"
                                        InitialDirection="@GetPropertyMudSortDirection("MinorName")">
                        Minor Name
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Minor Name</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorSymbol"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("MinorSymbol"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "MinorSymbol"))"
                                        InitialDirection="@GetPropertyMudSortDirection("MinorSymbol")">
                        Minor Symbol
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Minor Symbol</MudTh>
            }
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorToMajorValue"))
        {
            @if (CurrentApiUiService!.IsPropertyOrdered("MinorToMajorValue"))
            {
                <MudTh>
                    <MudTableSortLabel T="CurrencyModel"
                                        SortDirectionChanged="@(e=>UpdateOrder(e.ToString(), "MinorToMajorValue"))"
                                        InitialDirection="@GetPropertyMudSortDirection("MinorToMajorValue")">
                        Minor to Major Value
                    </MudTableSortLabel>
                </MudTh>
            }
            else
            {
                <MudTh>Minor to Major Value</MudTh>
            }
        }
        <MudTh>Delete</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
             <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Info" OnClick="@(e=>SelectedOnClick(context))" />
        </MudTd>
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Name"))
        {
            <MudTd>
                <ViewText Text="@context.Name" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("CurrencyIsoNumeric"))
        {
            <MudTd>
                <ViewCurrencyNumber CurrencyNumber="@context.CurrencyIsoNumeric" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("Symbol"))
        {
            <MudTd>
                <ViewText Text="@context.Symbol" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("ThousandsSeparator"))
        {
            <MudTd>
                <ViewText Text="@context.ThousandsSeparator" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("DecimalSeparator"))
        {
            <MudTd>
                <ViewText Text="@context.DecimalSeparator" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("SpaceBetweenAmountAndSymbol"))
        {
            <MudTd>
                <ViewBoolean Boolean="@context.SpaceBetweenAmountAndSymbol" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("SymbolOnLeft"))
        {
            <MudTd>
                <ViewBoolean Boolean="@context.SymbolOnLeft" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("DecimalDigits"))
        {
            <MudTd>
                <ViewNumber Number="@context.DecimalDigits" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MajorName"))
        {
            <MudTd>
                <ViewText Text="@context.MajorName" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MajorSymbol"))
        {
            <MudTd>
                <ViewText Text="@context.MajorSymbol" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorName"))
        {
            <MudTd>
                <ViewText Text="@context.MinorName" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorSymbol"))
        {
            <MudTd>
                <ViewText Text="@context.MinorSymbol" />
            </MudTd>
        }
        @if (CurrentApiUiService!.IsPropertyShowInSearch("MinorToMajorValue"))
        {
            <MudTd>
                <ViewMoney Money="@context.MinorToMajorValue" />
            </MudTd>
        }
        <MudTd>
             <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="@(e=>DeleteOnClick(context))" />
        </MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText Typo="Typo.h6">@NoxResources.NoResultsFound</MudText>
    </NoRecordsContent>
    <PagerContent>
        <MudTablePager PageSizeOptions="CurrentApiUiService!.Paging?.PageSizeList?.ToArray()" />
    </PagerContent>
</MudTable>