version: '3.7'

volumes:
  sqlserver: 
  postgres:
  esdata:
    driver: local
  
services:
  sqlserver:
    container_name: sqlserver_container
    image: "mcr.microsoft.com/azure-sql-edge:latest"
    user: root
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "Developer*123"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Developer"
    volumes:
      - sqlserver:/var/opt/mssql/data

  postgres:
    container_name: postgres_container
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_DB: SampleCurrencyDb
      POSTGRES_USER: "sa"
      POSTGRES_PASSWORD: "Developer*123"
      PGDATA: ./data
    ports:
      - "54320:5432"
    volumes:
      - postgres:/var/lib/postgresql/data      

  apm-server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.17.10
    cap_add: ["CHOWN", "DAC_OVERRIDE", "SETGID", "SETUID"]
    cap_drop: ["ALL"]
    ports:
    - 8200:8200
    networks:
    - elastic
    command: >
       apm-server -e
         -E apm-server.rum.enabled=true
         -E setup.kibana.host=kibana:5601
         -E setup.template.settings.index.number_of_replicas=0
         -E apm-server.kibana.enabled=true
         -E apm-server.kibana.host=kibana:5601
         -E output.elasticsearch.hosts=["elasticsearch:9200"]
         -E apm-server.kibana.username=elastic
         -E apm-server.kibana.password=Developer*123
         -E output.elasticsearch.username=elastic
         -E output.elasticsearch.password=Developer*123
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/

  vault:
    container_name: hashi-vault
    image: hashicorp/vault:latest
    restart: always
    volumes:
      - /vault/data
      - /etc/vault/logs
    ports:
      - "8300:8300/tcp"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: "root"
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8300"
    cap_add:
      - IPC_LOCK
    entrypoint: "vault server -dev"
    networks:
      - vault-network
   
  org-vault-init:
    container_name: org-vault-init
    image: alpine/curl
    depends_on:
      - vault
    volumes:
      - ./init_org_vault.sh:/usr/local/bin/init_vault.sh
    command: ["sh", "-c", "/usr/local/bin/init_vault.sh"]
    networks:
      - vault-network
  
  sln-vault-init:
    container_name: sln-vault-init
    image: alpine/curl
    depends_on:
      - vault
    volumes:
      - ./init_sln_vault.sh:/usr/local/bin/init_vault.sh
    command: ["sh", "-c", "/usr/local/bin/init_vault.sh"]
    networks:
      - vault-network

networks:
  elastic:
    driver: bridge
  vault-network:
