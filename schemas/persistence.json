{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "databaseServer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^\\s]*$",
          "title": "The unique name of this server component in the solution.",
          "description": "The name of this server component in the solution. The name must be unique in the solution configuration"
        },
        "serverUri": {
          "type": "string",
          "title": "Hostname, IP address or URI.",
          "description": "The name, address, URI or IP of the server to connect to."
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Server port",
          "description": "The port to connect to."
        },
        "user": {
          "type": "string",
          "title": "Username.",
          "description": "The username to use when connecting to this server."
        },
        "password": {
          "type": "string",
          "title": "Password.",
          "description": "The password to use when connecting to this server."
        },
        "options": {
          "type": "string",
          "title": "Additional options.",
          "description": "A list of additional options to set when connecting to this server."
        },
        "provider": {
          "enum": [
            "sqlServer",
            "postgres",
            "mySql",
            "sqLite"
          ],
          "title": "The database provider.",
          "description": "The provider used for this database server. Examples include SqlServer, Postgres and others."
        }
      },
      "required": [
        "name",
        "serverUri",
        "provider"
      ],
      "title": "The definition namespace for the Database server used in a Nox solution.",
      "description": "Specify properties pertinent to the solution Database server here. Examples include name, serverUri, Port and connection credentials",
      "additionalProperties": false
    },
    "integrationDatabaseServer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^\\s]*$",
          "title": "The unique name of this server component in the solution.",
          "description": "The name of this server component in the solution. The name must be unique in the solution configuration"
        },
        "serverUri": {
          "type": "string",
          "title": "Hostname, IP address or URI.",
          "description": "The name, address, URI or IP of the server to connect to."
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Server port",
          "description": "The port to connect to."
        },
        "user": {
          "type": "string",
          "title": "Username.",
          "description": "The username to use when connecting to this server."
        },
        "password": {
          "type": "string",
          "title": "Password.",
          "description": "The password to use when connecting to this server."
        },
        "options": {
          "type": "string",
          "title": "Additional options.",
          "description": "A list of additional options to set when connecting to this server."
        },
        "provider": {
          "enum": [
            "sqlServer",
            "postgres",
            "mySql",
            "sqLite"
          ],
          "title": "The integration database provider.",
          "description": "The provider used for this integration database server. Examples include SqlServer, Postgres and others."
        }
      },
      "required": [
        "name",
        "serverUri",
        "provider"
      ],
      "additionalProperties": false
    },
    "cacheServer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^\\s]*$",
          "title": "The unique name of this server component in the solution.",
          "description": "The name of this server component in the solution. The name must be unique in the solution configuration"
        },
        "serverUri": {
          "type": "string",
          "title": "Hostname, IP address or URI.",
          "description": "The name, address, URI or IP of the server to connect to."
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Server port",
          "description": "The port to connect to."
        },
        "user": {
          "type": "string",
          "title": "Username.",
          "description": "The username to use when connecting to this server."
        },
        "password": {
          "type": "string",
          "title": "Password.",
          "description": "The password to use when connecting to this server."
        },
        "options": {
          "type": "string",
          "title": "Additional options.",
          "description": "A list of additional options to set when connecting to this server."
        },
        "provider": {
          "enum": [
            "amazonElasticCache",
            "azureRedis",
            "memcached",
            "redis"
          ],
          "title": "The cache server provider.",
          "description": "The provider used for this cache server. Examples include AmazonElasticCache, AzureRedis, Memcached and Redis.",
          "additionalProperties": false
        }
      },
      "required": [
        "name",
        "serverUri",
        "provider"
      ],
      "title": "The definition namespace for the Cache server used in a Nox solution.",
      "description": "Specify properties pertinent to the solution Cache server here. Examples include name, serverUri, Port and connection credentials",
      "additionalProperties": false
    },
    "searchServer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^\\s]*$",
          "title": "The unique name of this server component in the solution.",
          "description": "The name of this server component in the solution. The name must be unique in the solution configuration"
        },
        "serverUri": {
          "type": "string",
          "title": "Hostname, IP address or URI.",
          "description": "The name, address, URI or IP of the server to connect to."
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Server port",
          "description": "The port to connect to."
        },
        "user": {
          "type": "string",
          "title": "Username.",
          "description": "The username to use when connecting to this server."
        },
        "password": {
          "type": "string",
          "title": "Password.",
          "description": "The password to use when connecting to this server."
        },
        "options": {
          "type": "string",
          "title": "Additional options.",
          "description": "A list of additional options to set when connecting to this server."
        },
        "provider": {
          "enum": [
            "elasticSearch"
          ],
          "title": "The search server provider.",
          "description": "The provider used for this search server server. Examples include ElasticSearch."
        }
      },
      "required": [
        "name",
        "serverUri",
        "provider"
      ],
      "title": "The definition namespace for the Search server used in a Nox solution.",
      "description": "Specify properties pertinent to the solution Search server here. Examples include name, serverUri, Port and connection credentials",
      "additionalProperties": false
    },
    "eventSourceServer": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "pattern": "^[^\\s]*$",
          "title": "The unique name of this server component in the solution.",
          "description": "The name of this server component in the solution. The name must be unique in the solution configuration"
        },
        "serverUri": {
          "type": "string",
          "title": "Hostname, IP address or URI.",
          "description": "The name, address, URI or IP of the server to connect to."
        },
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "title": "Server port",
          "description": "The port to connect to."
        },
        "user": {
          "type": "string",
          "title": "Username.",
          "description": "The username to use when connecting to this server."
        },
        "password": {
          "type": "string",
          "title": "Password.",
          "description": "The password to use when connecting to this server."
        },
        "options": {
          "type": "string",
          "title": "Additional options.",
          "description": "A list of additional options to set when connecting to this server."
        },
        "provider": {
          "enum": [
            "eventStoreDb"
          ],
          "title": "The event source server provider.",
          "description": "The provider used for this event source server. Examples include EventStoreDB."
        }
      },
      "required": [
        "name",
        "serverUri",
        "provider"
      ],
      "title": "The definition namespace for the Event Source server used in a Nox solution.",
      "description": "Specify properties pertinent to the solution Event Source server here. Examples include name, serverUri, Port and connection credentials",
      "additionalProperties": false
    }
  },
  "required": [
    "databaseServer"
  ]
}