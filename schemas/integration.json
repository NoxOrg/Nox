{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "The definition namespace for an application ETL data integration.",
  "description": "Details pertaining to a solution data integration. Includes common ETL attributes like source, transform and target.",
  "type": [
    "object",
    "null"
  ],
  "required": [
    "name"
  ],
  "properties": {
    "name": {    
      "title": "The name of the ETL integration. Contains no spaces.",
      "description": "The name of the ETL integration. It should be a commonly used singular noun and be unique within a solution.",
      "type": "string",
      "pattern": "^[^\\s]*$"
    },
    "description": {    
      "title": "A phrase describing the objective of the ETL data integration.",
      "description": "A phrase describing the high-level objective of the ETL. A reference to data source and format is especially useful.",
      "type": [
        "string",
        "null"
      ]
    },
    "schedule": {    
      "title": "Scheduling of the ETL source.",
      "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
      "type": [
        "object",
        "null"
      ],
      "required": [
        "start"
      ],
      "properties": {
        "start": {    
          "title": "Start time to check the ETL source for updates.",
          "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
          "type": "string"
        },
        "retry": {    
          "title": "Retry policy applying to the ETL source updates.",
          "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "limit": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "delaySeconds": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "doubleDelayLimit": {    
              "type": [
                "integer",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "runOnStartup": {    
          "title": "Check the ETL source for updates at appliation startup.",
          "description": "Specify here whether the ETL source is checked for updates when the application starts.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "source": {    
      "anyOf": [
        { "$ref": "integrationSource.json" },
        {
          "additionalProperties": false, 
          "properties": {
            "$ref": {
              "type": "string",
              "format": "uri",
              "pattern": "^[^\\s]*$"
            }
          }
        }
      ]
    },
    "transform": {    
      "anyOf": [
        { "$ref": "integrationTransform.json" },
        {
          "additionalProperties": false, 
          "properties": {
            "$ref": {
              "type": "string",
              "format": "uri",
              "pattern": "^[^\\s]*$"
            }
          }
        }
      ]
    },
    "target": {    
      "anyOf": [
        { "$ref": "integrationTarget.json" },
        {
          "additionalProperties": false, 
          "properties": {
            "$ref": {
              "type": "string",
              "format": "uri",
              "pattern": "^[^\\s]*$"
            }
          }
        }
      ]
    }
  },
  "additionalProperties": false
}
