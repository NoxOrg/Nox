{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "The user interface display options for this attribute.",
  "description": "Specify how this attribute is rendered on the user interface. Configuration options include label, icon, input/output masks, help hints among other.",
  "oneOf": [
    {
      "type": "object"
    },
    {
      "type": "null"
    }
  ],
  "properties": {
    "label": {    
      "title": "A descriptive label for this attribute on the user interface.",
      "description": "The text label rendered on the user interface alongside the NoxTextInput component.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "widget": {    
      "title": "Widget used to render this attribute on the user interface.",
      "description": "The user interface control type that is best suited to render the attribute on the screen.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "camera",
            "checkbox",
            "datePicker",
            "dateRangePicker",
            "fileUpload",
            "gps",
            "numberInput",
            "numberSlider",
            "radio",
            "select",
            "textArea",
            "textInput",
            "timePicker",
            "timeRangePicker",
            "toggleSwitch"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "icon": {    
      "title": "The icon representing the attribute on the user interface.",
      "description": "A reference URI to the attribute icon file. Could be a CSS or Mudblazor reference, e.g. '@Icons.Material.Filled.Globe'.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "iconPosition": {    
      "title": "The position of the attribute icon on the user interface.",
      "description": "The postition of the attribute icon relative to the text input area on the user interface, e.g. begin or end.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "begin",
            "end"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "inputMask": {    
      "title": "A mask expression used to validate and control text input.",
      "description": "A string of characters that indicates the format of valid input values. For example '(000) 000-0000' could be used for a seven digit phone number with mandatory area code.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "outputMask": {    
      "title": "A mask expression used to validate and control a value's output.",
      "description": "A string of characters that indicates the format of valid output. Used to handle validation triggers for onSubmit and onChange events of the control.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "regex": {    
      "title": "The regular expression against which input is validated.",
      "description": "A regex string that indicates the format of valid input. For example '/^(\\([0-9]{3}\\) |[0-9]{3}-)[0-9]{3}-[0-9]{4}$/gm' could be used for a seven digit phone number with mandatory area code.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "pageGroup": {    
      "title": "The user interface PageGroup identifier.",
      "description": "Used to associate component with a PageGroup identifier on the user interface.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "fieldGroup": {    
      "title": "The user interface FieldGroup identifier.",
      "description": "Used to associate component with a FieldGroup identifier on the user interface.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "inputOrder": {    
      "title": "Display/edit focus order within a FieldGroup on a user interface.",
      "description": "The order within a group of user interface components (FieldGroup) in which this attribute will receive focus for display or edit purpose.",
      "oneOf": [
        {
          "type": "integer"
        },
        {
          "type": "null"
        }
      ]
    },
    "helpHint": {    
      "title": "Helper text for this component.",
      "description": "The component default helper text used to aid the understanding of the component function to the user.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "errorMessage": {    
      "title": "Validation error message.",
      "description": "The default error message displayed when text input validation fails.",
      "oneOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "showInSearchResults": {    
      "title": "Whether attribute is shown in search grid.",
      "description": "Specifies the option for including attribute in search results on grid. 'Always' and 'Never' does not allow user to switch the column display on/off, whilst the other two allows the field to be displayed or hidden by the user.",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "always",
            "never",
            "optionalAndOffByDefault",
            "optionalAndOnByDefault"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "canSort": {    
      "title": "Specifies whether the user can order the grid by the attribure.",
      "description": "Allows or disallows sorting on this attribute in the search grid. An index will automatically be added to the entity sotore for this column.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "canSearch": {    
      "title": "Whether the attribute is searchable by the value entered into the 'Search' control on the grid.",
      "description": "If 'yes' or 'true' the field will be included in the search logic and added to the search server if one is defined.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "canFilter": {    
      "title": "Whether the user can filter on this attribute or not.",
      "description": "If 'yes' or 'true' the field will be included in the filter dialog and added to the search server if one is defined.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "showOnCreateForm": {    
      "title": "Whether the field will show on the 'Create' form for the entity/object that it belongs to.",
      "description": "Displays or surpresses the field on the 'Create' form. The default is 'yes' or 'true'.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    },
    "showOnUpdateForm": {    
      "title": "Whether the field will show on the 'Update' form for the entity/object that it belongs to.",
      "description": "Displays or surpresses the field on the 'Update' form. The default is 'yes' or 'true'.",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "null"
        }
      ]
    }
  },
  "additionalProperties": false
}
