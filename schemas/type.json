{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Definition namespace for Nox simple types.",
  "description": "Nox simple types definition used throughout Nox.Solution project.",
  "type": [
    "object",
    "null"
  ],
  "required": [
    "name",
    "type"
  ],
  "anyOf": [
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "text"
        },
        "textTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "maxLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "isUnicode": {    
              "type": [
                "boolean",
                "null"
              ]
            },
            "casing": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "lower",
                "normal",
                "upper"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "number"
        },
        "numberTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "maxValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "decimalDigits": {    
              "type": [
                "integer",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "money"
        },
        "moneyTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "decimalDigits": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "integerDigits": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "minValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "maxValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "defaultCurrency": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "AED",
                "AFN",
                "ALL",
                "AMD",
                "ANG",
                "AOA",
                "ARS",
                "AUD",
                "AWG",
                "AZN",
                "BAM",
                "BBD",
                "BDT",
                "BGN",
                "BHD",
                "BIF",
                "BMD",
                "BND",
                "BOB",
                "BRL",
                "BSD",
                "BTC",
                "BTN",
                "BWP",
                "BYN",
                "BYR",
                "BZD",
                "CAD",
                "CDF",
                "CHF",
                "CLP",
                "CNY",
                "COP",
                "CRC",
                "CUC",
                "CUP",
                "CVE",
                "CZK",
                "DJF",
                "DKK",
                "DOP",
                "DZD",
                "EGP",
                "ERN",
                "ETB",
                "EUR",
                "FJD",
                "FKP",
                "GBP",
                "GEL",
                "GHS",
                "GIP",
                "GMD",
                "GNF",
                "GTQ",
                "GYD",
                "HKD",
                "HNL",
                "HRK",
                "HTG",
                "HUF",
                "IDR",
                "ILS",
                "INR",
                "IQD",
                "IRR",
                "ISK",
                "JMD",
                "JOD",
                "JPY",
                "KES",
                "KGS",
                "KHR",
                "KMF",
                "KPW",
                "KRW",
                "KWD",
                "KYD",
                "KZT",
                "LAK",
                "LBP",
                "LKR",
                "LRD",
                "LSL",
                "LYD",
                "MAD",
                "MDL",
                "MGA",
                "MKD",
                "MMK",
                "MNT",
                "MOP",
                "MRO",
                "MTL",
                "MUR",
                "MVR",
                "MWK",
                "MXN",
                "MYR",
                "MZN",
                "NAD",
                "NGN",
                "NIO",
                "NOK",
                "NPR",
                "NZD",
                "OMR",
                "PAB",
                "PEN",
                "PGK",
                "PHP",
                "PKR",
                "PLN",
                "PYG",
                "QAR",
                "RON",
                "RSD",
                "RUB",
                "RWF",
                "SAR",
                "SBD",
                "SCR",
                "SDD",
                "SDG",
                "SEK",
                "SGD",
                "SHP",
                "SLL",
                "SOS",
                "SRD",
                "STD",
                "SVC",
                "SYP",
                "SZL",
                "THB",
                "TJS",
                "TMT",
                "TND",
                "TOP",
                "TRY",
                "TTD",
                "TVD",
                "TWD",
                "TZS",
                "UAH",
                "UGX",
                "USD",
                "UYU",
                "UZS",
                "VEB",
                "VEF",
                "VND",
                "VUV",
                "WON",
                "WST",
                "XAF",
                "XBT",
                "XCD",
                "XOF",
                "XPF",
                "YER",
                "ZAR",
                "ZMW"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "entity"
        },
        "entityTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "entity": {    
              "type": [
                "string",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "date"
        },
        "dateTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minValue": {    
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            },
            "maxValue": {    
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "percentage"
        },
        "percentageTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "maxValue": {    
              "type": [
                "number",
                "null"
              ]
            },
            "digits": {    
              "type": [
                "integer",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "translatedText"
        },
        "translatedTextTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "maxLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "characterCasing": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "lower",
                "normal",
                "upper"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "nuid"
        },
        "nuidTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "separator": {    
              "type": [
                "string",
                "null"
              ]
            },
            "propertyNames": {    
              "type": [
                "array",
                "null"
              ],
              "items":   {
                "type": [
                  "string",
                  "null"
                ],
                "properties": {
                  "chars": {    
                    "type": [
                      "object",
                      "null"
                    ]
                  },
                  "length": {    
                    "type": [
                      "integer",
                      "null"
                    ]
                  }
                }
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "year"
        },
        "yearTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minValue": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "maxValue": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "allowFutureOnly": {    
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "dateTimeDuration"
        },
        "dateTimeDurationTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "maxDuration": {    
              "type": [
                "number",
                "null"
              ]
            },
            "maxDurationCustomFormat": {    
              "type": [
                "string",
                "null"
              ]
            },
            "minDuration": {    
              "type": [
                "number",
                "null"
              ]
            },
            "minDurationCustomFormat": {    
              "type": [
                "string",
                "null"
              ]
            },
            "timeUnit": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "customFormat",
                "day",
                "hour",
                "millisecond",
                "minute",
                "second"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "hashedText"
        },
        "hashedTextTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "hashingAlgorithm": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "sHA256",
                "sHA512"
              ]
            },
            "saltLength": {    
              "type": [
                "integer",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "dateTime"
        },
        "dateTimeTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "minValue": {    
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            },
            "maxValue": {    
              "type": [
                "string",
                "null"
              ],
              "format": "date-time"
            },
            "allowFutureOnly": {    
              "type": [
                "boolean",
                "null"
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "const": "password"
        },
        "passwordTypeOptions": {    
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "hashingAlgorithm": {    
              "type": [
                "string",
                "null"
              ],
              "enum": [
                "sHA256",
                "sHA512"
              ]
            },
            "salt": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "minLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "maxLength": {    
              "type": [
                "integer",
                "null"
              ]
            },
            "forceUppercase": {    
              "type": [
                "boolean",
                "null"
              ]
            },
            "forceLowercase": {    
              "type": [
                "boolean",
                "null"
              ]
            },
            "forceSymbol": {    
              "type": [
                "boolean",
                "null"
              ]
            },
            "forceNumber": {    
              "type": [
                "boolean",
                "null"
              ]
            },
            "passwordContainsUpperCase": {    
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "options": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "compiled",
                    "cultureInvariant",
                    "eCMAScript",
                    "explicitCapture",
                    "ignoreCase",
                    "ignorePatternWhitespace",
                    "multiline",
                    "nonBacktracking",
                    "none",
                    "rightToLeft",
                    "singleline"
                  ]
                },
                "rightToLeft": {    
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "matchTimeout": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "duration"
                }
              }
            },
            "passwordContainsLowerCase": {    
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "options": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "compiled",
                    "cultureInvariant",
                    "eCMAScript",
                    "explicitCapture",
                    "ignoreCase",
                    "ignorePatternWhitespace",
                    "multiline",
                    "nonBacktracking",
                    "none",
                    "rightToLeft",
                    "singleline"
                  ]
                },
                "rightToLeft": {    
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "matchTimeout": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "duration"
                }
              }
            },
            "passwordContainsSymbol": {    
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "options": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "compiled",
                    "cultureInvariant",
                    "eCMAScript",
                    "explicitCapture",
                    "ignoreCase",
                    "ignorePatternWhitespace",
                    "multiline",
                    "nonBacktracking",
                    "none",
                    "rightToLeft",
                    "singleline"
                  ]
                },
                "rightToLeft": {    
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "matchTimeout": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "duration"
                }
              }
            },
            "passwordContainsNumber": {    
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "options": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "enum": [
                    "compiled",
                    "cultureInvariant",
                    "eCMAScript",
                    "explicitCapture",
                    "ignoreCase",
                    "ignorePatternWhitespace",
                    "multiline",
                    "nonBacktracking",
                    "none",
                    "rightToLeft",
                    "singleline"
                  ]
                },
                "rightToLeft": {    
                  "type": [
                    "boolean",
                    "null"
                  ]
                },
                "matchTimeout": {    
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "duration"
                }
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "type": [
            "string",
            "null"
          ]
        },
        "type": {    
          "type": "string",
          "enum": [
            "area",
            "array",
            "autoNumber",
            "boolean",
            "collection",
            "color",
            "countryCode2",
            "countryCode3",
            "countryNumber",
            "cultureCode",
            "currencyCode",
            "currencyNumber",
            "dateTimeRange",
            "dateTimeSchedule",
            "dayOfWeek",
            "distance",
            "email",
            "encryptedText",
            "file",
            "formula",
            "guid",
            "html",
            "image",
            "internetDomain",
            "ipAddress",
            "json",
            "jwtToken",
            "languageCode",
            "latLong",
            "length",
            "macAddress",
            "markdown",
            "month",
            "object",
            "phoneNumber",
            "streetAddress",
            "temperature",
            "time",
            "timeZoneCode",
            "uri",
            "url",
            "user",
            "vatNumber",
            "volume",
            "weight",
            "yaml"
          ]
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "type": [
            "boolean",
            "null"
          ]
        }
      },
      "additionalProperties": false
    }
  ]
}
