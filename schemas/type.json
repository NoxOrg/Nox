{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Definition namespace for Nox simple types.",
  "description": "Nox simple types definition used throughout Nox.Solution project.",
  "oneOf": [
    {
      "type": "object"
    }
  ]
  "required": [
    "name",
    "type"
  ],
  "anyOf": [
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "text"
        },
        "textTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "isUnicode": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "isLocalized": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "casing": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "lower",
                    "normal",
                    "upper"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "number"
        },
        "numberTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "decimalDigits": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "money"
        },
        "moneyTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "decimalDigits": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "integerDigits": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "defaultCurrency": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLE",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UYW",
                    "UZS",
                    "VED",
                    "VES",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "entityId"
        },
        "entityIdTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "entity": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "date"
        },
        "dateTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "string",
                  "format": "date-time"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "percentage"
        },
        "percentageTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "digits": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "translatedText"
        },
        "translatedTextTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "characterCasing": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "lower",
                    "normal",
                    "upper"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "nuid"
        },
        "nuidTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "prefix": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "separator": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "propertyNames": {    
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "year"
        },
        "yearTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "allowFutureOnly": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "dateTimeDuration"
        },
        "dateTimeDurationTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "maxDuration": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxDurationCustomFormat": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "minDuration": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "minDurationCustomFormat": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "timeUnit": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "customFormat",
                    "day",
                    "hour",
                    "millisecond",
                    "minute",
                    "second"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "hashedText"
        },
        "hashedTextTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "hashingAlgorithm": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "sHA256",
                    "sHA512"
                  ]
                }
              ]
            },
            "saltLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "dateTime"
        },
        "dateTimeTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
            },
            "allowFutureOnly": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "image"
        },
        "imageTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "imageFormatTypes": {    
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "all",
                      "bmp",
                      "gif",
                      "ico",
                      "jpeg",
                      "png",
                      "svg",
                      "tiff",
                      "webp"
                    ]
                  }
                ]
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "time"
        },
        "timeTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minTimeTicks": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxTimeTicks": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "file"
        },
        "fileTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "supportedFileFormats": {    
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string",
                    "enum": [
                      "all",
                      "csv",
                      "doc",
                      "docx",
                      "eml",
                      "pdf",
                      "ppt",
                      "pptx",
                      "txt",
                      "xls",
                      "xlsx"
                    ]
                  }
                ]
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "area"
        },
        "areaTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "units": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "squareFoot",
                    "squareMeter"
                  ]
                }
              ]
            },
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "squareFoot",
                    "squareMeter"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "encryptedText"
        },
        "encryptedTextTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "encryptionAlgorithm": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "aes"
                  ]
                }
              ]
            },
            "publicKey": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "iv": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "user"
        },
        "userTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "validEmailFormat": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "validGuidFormat": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "isCaseSensitive": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "password"
        },
        "passwordTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "hashingAlgorithm": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "sHA256",
                    "sHA512"
                  ]
                }
              ]
            },
            "saltLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "minLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "forceUppercase": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "forceLowercase": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "forceSymbol": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "forceNumber": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "passwordContainsUpperCase": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "options": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "compiled",
                        "cultureInvariant",
                        "eCMAScript",
                        "explicitCapture",
                        "ignoreCase",
                        "ignorePatternWhitespace",
                        "multiline",
                        "nonBacktracking",
                        "none",
                        "rightToLeft",
                        "singleline"
                      ]
                    }
                  ]
                },
                "rightToLeft": {    
                  "oneOf": [
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "matchTimeout": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "duration"
                    }
                  ]
                }
              }
            },
            "passwordContainsLowerCase": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "options": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "compiled",
                        "cultureInvariant",
                        "eCMAScript",
                        "explicitCapture",
                        "ignoreCase",
                        "ignorePatternWhitespace",
                        "multiline",
                        "nonBacktracking",
                        "none",
                        "rightToLeft",
                        "singleline"
                      ]
                    }
                  ]
                },
                "rightToLeft": {    
                  "oneOf": [
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "matchTimeout": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "duration"
                    }
                  ]
                }
              }
            },
            "passwordContainsSymbol": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "options": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "compiled",
                        "cultureInvariant",
                        "eCMAScript",
                        "explicitCapture",
                        "ignoreCase",
                        "ignorePatternWhitespace",
                        "multiline",
                        "nonBacktracking",
                        "none",
                        "rightToLeft",
                        "singleline"
                      ]
                    }
                  ]
                },
                "rightToLeft": {    
                  "oneOf": [
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "matchTimeout": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "duration"
                    }
                  ]
                }
              }
            },
            "passwordContainsNumber": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "options": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "enum": [
                        "compiled",
                        "cultureInvariant",
                        "eCMAScript",
                        "explicitCapture",
                        "ignoreCase",
                        "ignorePatternWhitespace",
                        "multiline",
                        "nonBacktracking",
                        "none",
                        "rightToLeft",
                        "singleline"
                      ]
                    }
                  ]
                },
                "rightToLeft": {    
                  "oneOf": [
                    {
                      "type": "boolean"
                    }
                  ]
                },
                "matchTimeout": {    
                  "oneOf": [
                    {
                      "type": "string",
                      "format": "duration"
                    }
                  ]
                }
              }
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "formula"
        },
        "formulaTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "expression": {    
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "returns": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "bool",
                    "dateTime",
                    "decimal",
                    "double",
                    "int",
                    "long",
                    "string"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "vatNumber"
        },
        "vatNumberTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "countryCode": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AQ",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BV",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CC",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IO",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TF",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "json"
        },
        "jsonTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "persistMinified": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            },
            "maxHashDepth": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "markdown"
        },
        "markdownTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "maxLength": {    
              "oneOf": [
                {
                  "type": "integer"
                }
              ]
            },
            "isUnicode": {    
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "temperature"
        },
        "temperatureTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ]
                }
              ]
            },
            "units": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "celsius",
                    "fahrenheit"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "length"
        },
        "lengthTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "units": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "foot",
                    "meter"
                  ]
                }
              ]
            },
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "foot",
                    "meter"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "volume"
        },
        "volumeTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "unit": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "cubicFoot",
                    "cubicMeter"
                  ]
                }
              ]
            },
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "cubicFoot",
                    "cubicMeter"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "weight"
        },
        "weightTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "units": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "kilogram",
                    "pound"
                  ]
                }
              ]
            },
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "kilogram",
                    "pound"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "distance"
        },
        "distanceTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "maxValue": {    
              "oneOf": [
                {
                  "type": "number"
                }
              ]
            },
            "units": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "kilometer",
                    "mile"
                  ]
                }
              ]
            },
            "persistAs": {    
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "kilometer",
                    "mile"
                  ]
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "const": "dateTimeRange"
        },
        "dateTimeRangeTypeOptions": {    
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "minStartValue": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
            },
            "maxEndValue": {    
              "oneOf": [
                {
                  "type": "object"
                }
              ]
            }
          }
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object"
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {    
          "title": "The name of the attribute. Contains no spaces.",
          "description": "Assign a descriptive name to the attribute. Should be a singular noun and be unique within a collection of attributes. PascalCase recommended.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "The description of the attribute.",
          "description": "A descriptive phrase that explains the nature and function of this attribute within a collection.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "type": {    
          "type": "string",
          "enum": [
            "array",
            "autoNumber",
            "boolean",
            "collection",
            "color",
            "countryCode2",
            "countryCode3",
            "countryNumber",
            "cultureCode",
            "currencyCode3",
            "currencyNumber",
            "dateTimeSchedule",
            "dayOfWeek",
            "email",
            "guid",
            "html",
            "internetDomain",
            "ipAddress",
            "jwtToken",
            "languageCode",
            "latLong",
            "macAddress",
            "month",
            "object",
            "phoneNumber",
            "streetAddress",
            "timeZoneCode",
            "uri",
            "url",
            "yaml"
          ]
        },
        "isRequired": {    
          "title": "Is the attribute required? Boolean value.",
          "description": "Indicates whether this attribute is required within the collection. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        },
        "userInterface": {    
          "anyOf": [
            { "$ref": "typeUserInterface.json" },
            {
              "additionalProperties": false, 
              "properties": {
                "$ref": {
                  "type": "string",
                  "format": "uri",
                  "pattern": "^[^\\s]*$"
                }
              }
            }
          ]
        },
        "isReadonly": {    
          "title": "Is this attribute readonly? Boolean value.",
          "description": "Indicates whether this attribute is readonly. Defaults to false.",
          "oneOf": [
            {
              "type": "boolean"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  ]
}
