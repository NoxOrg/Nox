{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Definition namespace for attributes describing the source component of an ETL integration.",
  "description": "This section details ETL source attributes like name, description, scheduling and watermark specifications.",
  "type": "object"
  "required": [
    "name",
    "sourceType",
    "dataConnectionName"
  ],
  "anyOf": [
    {
      "required": [
        "name",
        "sourceType",
        "dataConnectionName"
      ],
      "properties": {
        "name": {    
          "title": "The name of the ETL source. Contains no spaces.",
          "description": "The name should be a commonly used singular noun and be unique within a solution.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "A description of the ETL source.",
          "description": "A phrase describing the source component of the ETL. Think about describing the what/where of this data source.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "schedule": {    
          "title": "Scheduling of the ETL source.",
          "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "start"
          ],
          "properties": {
            "start": {    
              "title": "Start time to check the ETL source for updates.",
              "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
              "type": "string"
            },
            "retry": {    
              "title": "Retry policy applying to the ETL source updates.",
              "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "limit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "delaySeconds": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "doubleDelayLimit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "runOnStartup": {    
              "title": "Check the ETL source for updates at appliation startup.",
              "description": "Specify here whether the ETL source is checked for updates when the application starts.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {    
          "const": "database"
        },
        "databaseOptions": {    
          "title": "Definition namespace for a database ETL source.",
          "description": "This section specified attributes related to an ETL source of type Database. Attributes include the database query as well as minimumexpected records.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "query"
          ],
          "properties": {
            "query": {    
              "title": "The query to execute.",
              "description": "The query that will be executed on the source database.",
              "type": "string"
            },
            "minimumExpectedRecords": {    
              "title": "The minimum expected record count.",
              "description": "The minimum expected record count as a result of this data ingestion.",
              "oneOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "dataConnectionName": {    
          "title": "The name of the integration source. Contains no spaces.",
          "description": "The name of the data connection for this integration source. This must refer to an existing data connection in infrastructure, dependencies, dataConnections.",
          "type": "string",
          "pattern": "^[^\\s]*$"
          "additionalProperties": false
        },
        "watermark": {    
          "title": "Definition namespace for watermark columns on the ETL source data.",
          "description": "This section lists the column(s) on the source data used to compare to the target data to indicate whether the source data has been updated.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "dateColumns": {    
              "title": "Column(s) in datetime format used for watermark purpose.",
              "description": "List datetime columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "sequentialKeyColumn": {    
              "title": "Sequential key column used for watermark purpose.",
              "description": "Specify a sequential key columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "sourceType",
        "dataConnectionName"
      ],
      "properties": {
        "name": {    
          "title": "The name of the ETL source. Contains no spaces.",
          "description": "The name should be a commonly used singular noun and be unique within a solution.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "A description of the ETL source.",
          "description": "A phrase describing the source component of the ETL. Think about describing the what/where of this data source.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "schedule": {    
          "title": "Scheduling of the ETL source.",
          "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "start"
          ],
          "properties": {
            "start": {    
              "title": "Start time to check the ETL source for updates.",
              "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
              "type": "string"
            },
            "retry": {    
              "title": "Retry policy applying to the ETL source updates.",
              "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "limit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "delaySeconds": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "doubleDelayLimit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "runOnStartup": {    
              "title": "Check the ETL source for updates at appliation startup.",
              "description": "Specify here whether the ETL source is checked for updates when the application starts.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {    
          "const": "file"
        },
        "fileOptions": {    
          "title": "Definition namespace for a file type ETL source.",
          "description": "This section specified attributes related to an ETL source of type File. Attributes include the database query as well as minimumexpected records.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "filename"
          ],
          "properties": {
            "filename": {    
              "title": "The file name.",
              "description": "The name of the file that will be ingested.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "dataConnectionName": {    
          "title": "The name of the integration source. Contains no spaces.",
          "description": "The name of the data connection for this integration source. This must refer to an existing data connection in infrastructure, dependencies, dataConnections.",
          "type": "string",
          "pattern": "^[^\\s]*$"
          "additionalProperties": false
        },
        "watermark": {    
          "title": "Definition namespace for watermark columns on the ETL source data.",
          "description": "This section lists the column(s) on the source data used to compare to the target data to indicate whether the source data has been updated.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "dateColumns": {    
              "title": "Column(s) in datetime format used for watermark purpose.",
              "description": "List datetime columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "sequentialKeyColumn": {    
              "title": "Sequential key column used for watermark purpose.",
              "description": "Specify a sequential key columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "sourceType",
        "dataConnectionName"
      ],
      "properties": {
        "name": {    
          "title": "The name of the ETL source. Contains no spaces.",
          "description": "The name should be a commonly used singular noun and be unique within a solution.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "A description of the ETL source.",
          "description": "A phrase describing the source component of the ETL. Think about describing the what/where of this data source.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "schedule": {    
          "title": "Scheduling of the ETL source.",
          "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "start"
          ],
          "properties": {
            "start": {    
              "title": "Start time to check the ETL source for updates.",
              "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
              "type": "string"
            },
            "retry": {    
              "title": "Retry policy applying to the ETL source updates.",
              "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "limit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "delaySeconds": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "doubleDelayLimit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "runOnStartup": {    
              "title": "Check the ETL source for updates at appliation startup.",
              "description": "Specify here whether the ETL source is checked for updates when the application starts.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {    
          "const": "messageQueue"
        },
        "messageQueueOptions": {    
          "title": "Definition namespace for a Message Queue ETL source.",
          "description": "This section specified attributes related to an ETL source of type Message Queue. Attributes include the route, format and verb.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "sourceName"
          ],
          "properties": {
            "sourceName": {    
              "title": "The source name.",
              "description": "The name of the queue or topic subscription from which messages will be consumed.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "dataConnectionName": {    
          "title": "The name of the integration source. Contains no spaces.",
          "description": "The name of the data connection for this integration source. This must refer to an existing data connection in infrastructure, dependencies, dataConnections.",
          "type": "string",
          "pattern": "^[^\\s]*$"
          "additionalProperties": false
        },
        "watermark": {    
          "title": "Definition namespace for watermark columns on the ETL source data.",
          "description": "This section lists the column(s) on the source data used to compare to the target data to indicate whether the source data has been updated.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "dateColumns": {    
              "title": "Column(s) in datetime format used for watermark purpose.",
              "description": "List datetime columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "sequentialKeyColumn": {    
              "title": "Sequential key column used for watermark purpose.",
              "description": "Specify a sequential key columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "required": [
        "name",
        "sourceType",
        "dataConnectionName"
      ],
      "properties": {
        "name": {    
          "title": "The name of the ETL source. Contains no spaces.",
          "description": "The name should be a commonly used singular noun and be unique within a solution.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "A description of the ETL source.",
          "description": "A phrase describing the source component of the ETL. Think about describing the what/where of this data source.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "schedule": {    
          "title": "Scheduling of the ETL source.",
          "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "start"
          ],
          "properties": {
            "start": {    
              "title": "Start time to check the ETL source for updates.",
              "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
              "type": "string"
            },
            "retry": {    
              "title": "Retry policy applying to the ETL source updates.",
              "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "limit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "delaySeconds": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "doubleDelayLimit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "runOnStartup": {    
              "title": "Check the ETL source for updates at appliation startup.",
              "description": "Specify here whether the ETL source is checked for updates when the application starts.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {    
          "const": "webApi"
        },
        "webApiOptions": {    
          "title": "Definition namespace for a web API ETL source.",
          "description": "This section specified attributes related to an ETL source of type web API. Attributes include the route, response format and http verb.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "route": {    
              "title": "The path component for the request URI.",
              "description": "The path component for the request URI, e.g. '/myPath' in http://localhost:8081/myPath?myParameter=123.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            },
            "responseFormat": {    
              "title": "The Http response format.",
              "description": "The format of the Http response data papyload, eg. Json, XML.",
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "json",
                    "xml"
                  ]
                }
              ]
            },
            "httpVerb": {    
              "title": "The Http request verb.",
              "description": "The relevant verb detailing the Http request type, i.e. GET, POST, etc.",
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "get",
                    "post"
                  ]
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "dataConnectionName": {    
          "title": "The name of the integration source. Contains no spaces.",
          "description": "The name of the data connection for this integration source. This must refer to an existing data connection in infrastructure, dependencies, dataConnections.",
          "type": "string",
          "pattern": "^[^\\s]*$"
          "additionalProperties": false
        },
        "watermark": {    
          "title": "Definition namespace for watermark columns on the ETL source data.",
          "description": "This section lists the column(s) on the source data used to compare to the target data to indicate whether the source data has been updated.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "dateColumns": {    
              "title": "Column(s) in datetime format used for watermark purpose.",
              "description": "List datetime columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "sequentialKeyColumn": {    
              "title": "Sequential key column used for watermark purpose.",
              "description": "Specify a sequential key columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object"
      "required": [
        "name",
        "sourceType",
        "dataConnectionName"
      ],
      "properties": {
        "name": {    
          "title": "The name of the ETL source. Contains no spaces.",
          "description": "The name should be a commonly used singular noun and be unique within a solution.",
          "type": "string",
          "pattern": "^[^\\s]*$"
        },
        "description": {    
          "title": "A description of the ETL source.",
          "description": "A phrase describing the source component of the ETL. Think about describing the what/where of this data source.",
          "oneOf": [
            {
              "type": "string"
            }
          ]
        },
        "schedule": {    
          "title": "Scheduling of the ETL source.",
          "description": "Specify when and how frequently the ETL source is checked for updates, as well as the retry policy in case of failure. Includes a switch to indicate whether update is triggered at application startup.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "required": [
            "start"
          ],
          "properties": {
            "start": {    
              "title": "Start time to check the ETL source for updates.",
              "description": "Specify the start time to check the ETL source for updates. This is a 'speak-friendly' phrase that comprises the trigger time as well as the frequency. Translated into a cron expression.",
              "type": "string"
            },
            "retry": {    
              "title": "Retry policy applying to the ETL source updates.",
              "description": "This outlines the retry configuration in the case of ETL engine being unable to connect to the ETL data source. Includes limit and delay before retry.",
              "oneOf": [
                {
                  "type": "object"
                }
              ]
              "properties": {
                "limit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "delaySeconds": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "doubleDelayLimit": {    
                  "oneOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "runOnStartup": {    
              "title": "Check the ETL source for updates at appliation startup.",
              "description": "Specify here whether the ETL source is checked for updates when the application starts.",
              "oneOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {    
          "type": "string",
          "enum": [
            "entity"
          ]
        },
        "dataConnectionName": {    
          "title": "The name of the integration source. Contains no spaces.",
          "description": "The name of the data connection for this integration source. This must refer to an existing data connection in infrastructure, dependencies, dataConnections.",
          "type": "string",
          "pattern": "^[^\\s]*$"
          "additionalProperties": false
        },
        "watermark": {    
          "title": "Definition namespace for watermark columns on the ETL source data.",
          "description": "This section lists the column(s) on the source data used to compare to the target data to indicate whether the source data has been updated.",
          "oneOf": [
            {
              "type": "object"
            }
          ]
          "properties": {
            "dateColumns": {    
              "title": "Column(s) in datetime format used for watermark purpose.",
              "description": "List datetime columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "array"
                }
              ]
              "items":   {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            "sequentialKeyColumn": {    
              "title": "Sequential key column used for watermark purpose.",
              "description": "Specify a sequential key columns to be compared to target data to indicate if data has changed.",
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ]
}
